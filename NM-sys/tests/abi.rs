// This file was generated by gir (https://github.com/gtk-rs/gir @ c530bb9)
// from gir-files (https://github.com/gtk-rs/gir-files @ ???)
// DO NOT EDIT

extern crate nm_sys;
extern crate shell_words;
extern crate tempdir;
use std::env;
use std::error::Error;
use std::path::Path;
use std::mem::{align_of, size_of};
use std::process::Command;
use std::str;
use nm_sys::*;

static PACKAGES: &[&str] = &["libnm"];

#[derive(Clone, Debug)]
struct Compiler {
    pub args: Vec<String>,
}

impl Compiler {
    pub fn new() -> Result<Compiler, Box<Error>> {
        let mut args = get_var("CC", "cc")?;
        args.push("-Wno-deprecated-declarations".to_owned());
        // For %z support in printf when using MinGW.
        args.push("-D__USE_MINGW_ANSI_STDIO".to_owned());
        args.extend(get_var("CFLAGS", "")?);
        args.extend(get_var("CPPFLAGS", "")?);
        args.extend(pkg_config_cflags(PACKAGES)?);
        Ok(Compiler { args })
    }

    pub fn define<'a, V: Into<Option<&'a str>>>(&mut self, var: &str, val: V) {
        let arg = match val.into() {
            None => format!("-D{}", var), 
            Some(val) => format!("-D{}={}", var, val),
        };
        self.args.push(arg);
    }

    pub fn compile(&self, src: &Path, out: &Path) -> Result<(), Box<Error>> {
        let mut cmd = self.to_command();
        cmd.arg(src);
        cmd.arg("-o");
        cmd.arg(out);
        let status = cmd.spawn()?.wait()?;
        if !status.success() {
            return Err(format!("compilation command {:?} failed, {}",
                               &cmd, status).into());
        }
        Ok(())
    }

    fn to_command(&self) -> Command {
        let mut cmd = Command::new(&self.args[0]);
        cmd.args(&self.args[1..]);
        cmd
    }
}

fn get_var(name: &str, default: &str) -> Result<Vec<String>, Box<Error>> {
    match env::var(name) {
        Ok(value) => Ok(shell_words::split(&value)?),
        Err(env::VarError::NotPresent) => Ok(shell_words::split(default)?),
        Err(err) => Err(format!("{} {}", name, err).into()),
    }
}

fn pkg_config_cflags(packages: &[&str]) -> Result<Vec<String>, Box<Error>> {
    if packages.is_empty() {
        return Ok(Vec::new());
    }
    let mut cmd = Command::new("pkg-config");
    cmd.arg("--cflags");
    cmd.args(packages);
    let out = cmd.output()?;
    if !out.status.success() {
        return Err(format!("command {:?} returned {}", 
                           &cmd, out.status).into());
    }
    let stdout = str::from_utf8(&out.stdout)?;
    Ok(shell_words::split(stdout.trim())?)
}


#[derive(Copy, Clone, Debug, Eq, PartialEq)]
struct Layout {
    size: usize,
    alignment: usize,
}

#[derive(Copy, Clone, Debug, Default, Eq, PartialEq)]
struct Results {
    /// Number of successfully completed tests.
    passed: usize,
    /// Total number of failed tests (including those that failed to compile).
    failed: usize,
    /// Number of tests that failed to compile.
    failed_to_compile: usize,
}

impl Results {
    fn record_passed(&mut self) {
        self.passed += 1;
    }
    fn record_failed(&mut self) {
        self.failed += 1;
    }
    fn record_failed_to_compile(&mut self) {
        self.failed += 1;
        self.failed_to_compile += 1;
    }
    fn summary(&self) -> String {
        format!(
            "{} passed; {} failed (compilation errors: {})",
            self.passed,
            self.failed,
            self.failed_to_compile)
    }
    fn expect_total_success(&self) {
        if self.failed == 0 {
            println!("OK: {}", self.summary());
        } else {
            panic!("FAILED: {}", self.summary());
        };
    }
}

#[test]
fn cross_validate_constants_with_c() {
    let tmpdir = tempdir::TempDir::new("abi").expect("temporary directory");
    let cc = Compiler::new().expect("configured compiler");

    assert_eq!("1",
               get_c_value(tmpdir.path(), &cc, "1").expect("C constant"),
               "failed to obtain correct constant value for 1");

    let mut results : Results = Default::default();
    for (i, &(name, rust_value)) in RUST_CONSTANTS.iter().enumerate() {
        match get_c_value(tmpdir.path(), &cc, name) {
            Err(e) => {
                results.record_failed_to_compile();
                eprintln!("{}", e);
            },
            Ok(ref c_value) => {
                if rust_value == c_value {
                    results.record_passed();
                } else {
                    results.record_failed();
                    eprintln!("Constant value mismatch for {}\nRust: {:?}\nC:    {:?}",
                              name, rust_value, c_value);
                }
            }
        };
        if (i + 1) % 25 == 0 {
            println!("constants ... {}", results.summary());
        }
    }
    results.expect_total_success();
}

#[test]
fn cross_validate_layout_with_c() {
    let tmpdir = tempdir::TempDir::new("abi").expect("temporary directory");
    let cc = Compiler::new().expect("configured compiler");

    assert_eq!(Layout {size: 1, alignment: 1},
               get_c_layout(tmpdir.path(), &cc, "char").expect("C layout"),
               "failed to obtain correct layout for char type");

    let mut results : Results = Default::default();
    for (i, &(name, rust_layout)) in RUST_LAYOUTS.iter().enumerate() {
        match get_c_layout(tmpdir.path(), &cc, name) {
            Err(e) => {
                results.record_failed_to_compile();
                eprintln!("{}", e);
            },
            Ok(c_layout) => {
                if rust_layout == c_layout {
                    results.record_passed();
                } else {
                    results.record_failed();
                    eprintln!("Layout mismatch for {}\nRust: {:?}\nC:    {:?}",
                              name, rust_layout, &c_layout);
                }
            }
        };
        if (i + 1) % 25 == 0 {
            println!("layout    ... {}", results.summary());
        }
    }
    results.expect_total_success();
}

fn get_c_layout(dir: &Path, cc: &Compiler, name: &str) -> Result<Layout, Box<Error>> {
    let exe = dir.join("layout");
    let mut cc = cc.clone();
    cc.define("ABI_TYPE_NAME", name);
    cc.compile(Path::new("tests/layout.c"), &exe)?;

    let mut abi_cmd = Command::new(exe);
    let output = abi_cmd.output()?;
    if !output.status.success() {
        return Err(format!("command {:?} failed, {:?}",
                           &abi_cmd, &output).into());
    }

    let stdout = str::from_utf8(&output.stdout)?;
    let mut words = stdout.trim().split_whitespace();
    let size = words.next().unwrap().parse().unwrap();
    let alignment = words.next().unwrap().parse().unwrap();
    Ok(Layout {size, alignment})
}

fn get_c_value(dir: &Path, cc: &Compiler, name: &str) -> Result<String, Box<Error>> {
    let exe = dir.join("constant");
    let mut cc = cc.clone();
    cc.define("ABI_CONSTANT_NAME", name);
    cc.compile(Path::new("tests/constant.c"), &exe)?;

    let mut abi_cmd = Command::new(exe);
    let output = abi_cmd.output()?;
    if !output.status.success() {
        return Err(format!("command {:?} failed, {:?}",
                           &abi_cmd, &output).into());
    }

    Ok(str::from_utf8(&output.stdout)?.trim().to_owned())
}

const RUST_LAYOUTS: &[(&str, Layout)] = &[
    ("NM80211ApFlags", Layout {size: size_of::<NM80211ApFlags>(), alignment: align_of::<NM80211ApFlags>()}),
    ("NM80211ApSecurityFlags", Layout {size: size_of::<NM80211ApSecurityFlags>(), alignment: align_of::<NM80211ApSecurityFlags>()}),
    ("NM80211Mode", Layout {size: size_of::<NM80211Mode>(), alignment: align_of::<NM80211Mode>()}),
    ("NMAccessPoint", Layout {size: size_of::<NMAccessPoint>(), alignment: align_of::<NMAccessPoint>()}),
    ("NMAccessPointClass", Layout {size: size_of::<NMAccessPointClass>(), alignment: align_of::<NMAccessPointClass>()}),
    ("NMActiveConnection", Layout {size: size_of::<NMActiveConnection>(), alignment: align_of::<NMActiveConnection>()}),
    ("NMActiveConnectionClass", Layout {size: size_of::<NMActiveConnectionClass>(), alignment: align_of::<NMActiveConnectionClass>()}),
    ("NMActiveConnectionState", Layout {size: size_of::<NMActiveConnectionState>(), alignment: align_of::<NMActiveConnectionState>()}),
    ("NMActiveConnectionStateReason", Layout {size: size_of::<NMActiveConnectionStateReason>(), alignment: align_of::<NMActiveConnectionStateReason>()}),
    ("NMAgentManagerError", Layout {size: size_of::<NMAgentManagerError>(), alignment: align_of::<NMAgentManagerError>()}),
    ("NMBluetoothCapabilities", Layout {size: size_of::<NMBluetoothCapabilities>(), alignment: align_of::<NMBluetoothCapabilities>()}),
    ("NMCapability", Layout {size: size_of::<NMCapability>(), alignment: align_of::<NMCapability>()}),
    ("NMCheckpointCreateFlags", Layout {size: size_of::<NMCheckpointCreateFlags>(), alignment: align_of::<NMCheckpointCreateFlags>()}),
    ("NMClient", Layout {size: size_of::<NMClient>(), alignment: align_of::<NMClient>()}),
    ("NMClientClass", Layout {size: size_of::<NMClientClass>(), alignment: align_of::<NMClientClass>()}),
    ("NMClientError", Layout {size: size_of::<NMClientError>(), alignment: align_of::<NMClientError>()}),
    ("NMClientPermission", Layout {size: size_of::<NMClientPermission>(), alignment: align_of::<NMClientPermission>()}),
    ("NMClientPermissionResult", Layout {size: size_of::<NMClientPermissionResult>(), alignment: align_of::<NMClientPermissionResult>()}),
    ("NMConnectionError", Layout {size: size_of::<NMConnectionError>(), alignment: align_of::<NMConnectionError>()}),
    ("NMConnectionInterface", Layout {size: size_of::<NMConnectionInterface>(), alignment: align_of::<NMConnectionInterface>()}),
    ("NMConnectionSerializationFlags", Layout {size: size_of::<NMConnectionSerializationFlags>(), alignment: align_of::<NMConnectionSerializationFlags>()}),
    ("NMConnectivityState", Layout {size: size_of::<NMConnectivityState>(), alignment: align_of::<NMConnectivityState>()}),
    ("NMCryptoError", Layout {size: size_of::<NMCryptoError>(), alignment: align_of::<NMCryptoError>()}),
    ("NMDevice", Layout {size: size_of::<NMDevice>(), alignment: align_of::<NMDevice>()}),
    ("NMDeviceAdsl", Layout {size: size_of::<NMDeviceAdsl>(), alignment: align_of::<NMDeviceAdsl>()}),
    ("NMDeviceAdslClass", Layout {size: size_of::<NMDeviceAdslClass>(), alignment: align_of::<NMDeviceAdslClass>()}),
    ("NMDeviceBond", Layout {size: size_of::<NMDeviceBond>(), alignment: align_of::<NMDeviceBond>()}),
    ("NMDeviceBondClass", Layout {size: size_of::<NMDeviceBondClass>(), alignment: align_of::<NMDeviceBondClass>()}),
    ("NMDeviceBridge", Layout {size: size_of::<NMDeviceBridge>(), alignment: align_of::<NMDeviceBridge>()}),
    ("NMDeviceBridgeClass", Layout {size: size_of::<NMDeviceBridgeClass>(), alignment: align_of::<NMDeviceBridgeClass>()}),
    ("NMDeviceBt", Layout {size: size_of::<NMDeviceBt>(), alignment: align_of::<NMDeviceBt>()}),
    ("NMDeviceBtClass", Layout {size: size_of::<NMDeviceBtClass>(), alignment: align_of::<NMDeviceBtClass>()}),
    ("NMDeviceCapabilities", Layout {size: size_of::<NMDeviceCapabilities>(), alignment: align_of::<NMDeviceCapabilities>()}),
    ("NMDeviceClass", Layout {size: size_of::<NMDeviceClass>(), alignment: align_of::<NMDeviceClass>()}),
    ("NMDeviceDummy", Layout {size: size_of::<NMDeviceDummy>(), alignment: align_of::<NMDeviceDummy>()}),
    ("NMDeviceDummyClass", Layout {size: size_of::<NMDeviceDummyClass>(), alignment: align_of::<NMDeviceDummyClass>()}),
    ("NMDeviceError", Layout {size: size_of::<NMDeviceError>(), alignment: align_of::<NMDeviceError>()}),
    ("NMDeviceEthernet", Layout {size: size_of::<NMDeviceEthernet>(), alignment: align_of::<NMDeviceEthernet>()}),
    ("NMDeviceEthernetClass", Layout {size: size_of::<NMDeviceEthernetClass>(), alignment: align_of::<NMDeviceEthernetClass>()}),
    ("NMDeviceGeneric", Layout {size: size_of::<NMDeviceGeneric>(), alignment: align_of::<NMDeviceGeneric>()}),
    ("NMDeviceGenericClass", Layout {size: size_of::<NMDeviceGenericClass>(), alignment: align_of::<NMDeviceGenericClass>()}),
    ("NMDeviceIPTunnel", Layout {size: size_of::<NMDeviceIPTunnel>(), alignment: align_of::<NMDeviceIPTunnel>()}),
    ("NMDeviceIPTunnelClass", Layout {size: size_of::<NMDeviceIPTunnelClass>(), alignment: align_of::<NMDeviceIPTunnelClass>()}),
    ("NMDeviceInfiniband", Layout {size: size_of::<NMDeviceInfiniband>(), alignment: align_of::<NMDeviceInfiniband>()}),
    ("NMDeviceInfinibandClass", Layout {size: size_of::<NMDeviceInfinibandClass>(), alignment: align_of::<NMDeviceInfinibandClass>()}),
    ("NMDeviceMacsec", Layout {size: size_of::<NMDeviceMacsec>(), alignment: align_of::<NMDeviceMacsec>()}),
    ("NMDeviceMacsecClass", Layout {size: size_of::<NMDeviceMacsecClass>(), alignment: align_of::<NMDeviceMacsecClass>()}),
    ("NMDeviceMacvlan", Layout {size: size_of::<NMDeviceMacvlan>(), alignment: align_of::<NMDeviceMacvlan>()}),
    ("NMDeviceMacvlanClass", Layout {size: size_of::<NMDeviceMacvlanClass>(), alignment: align_of::<NMDeviceMacvlanClass>()}),
    ("NMDeviceModem", Layout {size: size_of::<NMDeviceModem>(), alignment: align_of::<NMDeviceModem>()}),
    ("NMDeviceModemCapabilities", Layout {size: size_of::<NMDeviceModemCapabilities>(), alignment: align_of::<NMDeviceModemCapabilities>()}),
    ("NMDeviceModemClass", Layout {size: size_of::<NMDeviceModemClass>(), alignment: align_of::<NMDeviceModemClass>()}),
    ("NMDeviceOlpcMesh", Layout {size: size_of::<NMDeviceOlpcMesh>(), alignment: align_of::<NMDeviceOlpcMesh>()}),
    ("NMDeviceOlpcMeshClass", Layout {size: size_of::<NMDeviceOlpcMeshClass>(), alignment: align_of::<NMDeviceOlpcMeshClass>()}),
    ("NMDeviceState", Layout {size: size_of::<NMDeviceState>(), alignment: align_of::<NMDeviceState>()}),
    ("NMDeviceStateReason", Layout {size: size_of::<NMDeviceStateReason>(), alignment: align_of::<NMDeviceStateReason>()}),
    ("NMDeviceTeam", Layout {size: size_of::<NMDeviceTeam>(), alignment: align_of::<NMDeviceTeam>()}),
    ("NMDeviceTeamClass", Layout {size: size_of::<NMDeviceTeamClass>(), alignment: align_of::<NMDeviceTeamClass>()}),
    ("NMDeviceTun", Layout {size: size_of::<NMDeviceTun>(), alignment: align_of::<NMDeviceTun>()}),
    ("NMDeviceTunClass", Layout {size: size_of::<NMDeviceTunClass>(), alignment: align_of::<NMDeviceTunClass>()}),
    ("NMDeviceType", Layout {size: size_of::<NMDeviceType>(), alignment: align_of::<NMDeviceType>()}),
    ("NMDeviceVlan", Layout {size: size_of::<NMDeviceVlan>(), alignment: align_of::<NMDeviceVlan>()}),
    ("NMDeviceVlanClass", Layout {size: size_of::<NMDeviceVlanClass>(), alignment: align_of::<NMDeviceVlanClass>()}),
    ("NMDeviceVxlan", Layout {size: size_of::<NMDeviceVxlan>(), alignment: align_of::<NMDeviceVxlan>()}),
    ("NMDeviceVxlanClass", Layout {size: size_of::<NMDeviceVxlanClass>(), alignment: align_of::<NMDeviceVxlanClass>()}),
    ("NMDeviceWifi", Layout {size: size_of::<NMDeviceWifi>(), alignment: align_of::<NMDeviceWifi>()}),
    ("NMDeviceWifiCapabilities", Layout {size: size_of::<NMDeviceWifiCapabilities>(), alignment: align_of::<NMDeviceWifiCapabilities>()}),
    ("NMDeviceWifiClass", Layout {size: size_of::<NMDeviceWifiClass>(), alignment: align_of::<NMDeviceWifiClass>()}),
    ("NMDeviceWimax", Layout {size: size_of::<NMDeviceWimax>(), alignment: align_of::<NMDeviceWimax>()}),
    ("NMDeviceWimaxClass", Layout {size: size_of::<NMDeviceWimaxClass>(), alignment: align_of::<NMDeviceWimaxClass>()}),
    ("NMDhcpConfig", Layout {size: size_of::<NMDhcpConfig>(), alignment: align_of::<NMDhcpConfig>()}),
    ("NMDhcpConfigClass", Layout {size: size_of::<NMDhcpConfigClass>(), alignment: align_of::<NMDhcpConfigClass>()}),
    ("NMIPConfig", Layout {size: size_of::<NMIPConfig>(), alignment: align_of::<NMIPConfig>()}),
    ("NMIPConfigClass", Layout {size: size_of::<NMIPConfigClass>(), alignment: align_of::<NMIPConfigClass>()}),
    ("NMIPTunnelMode", Layout {size: size_of::<NMIPTunnelMode>(), alignment: align_of::<NMIPTunnelMode>()}),
    ("NMManagerError", Layout {size: size_of::<NMManagerError>(), alignment: align_of::<NMManagerError>()}),
    ("NMMetered", Layout {size: size_of::<NMMetered>(), alignment: align_of::<NMMetered>()}),
    ("NMObject", Layout {size: size_of::<NMObject>(), alignment: align_of::<NMObject>()}),
    ("NMObjectClass", Layout {size: size_of::<NMObjectClass>(), alignment: align_of::<NMObjectClass>()}),
    ("NMRemoteConnection", Layout {size: size_of::<NMRemoteConnection>(), alignment: align_of::<NMRemoteConnection>()}),
    ("NMRemoteConnectionClass", Layout {size: size_of::<NMRemoteConnectionClass>(), alignment: align_of::<NMRemoteConnectionClass>()}),
    ("NMRollbackResult", Layout {size: size_of::<NMRollbackResult>(), alignment: align_of::<NMRollbackResult>()}),
    ("NMSecretAgentCapabilities", Layout {size: size_of::<NMSecretAgentCapabilities>(), alignment: align_of::<NMSecretAgentCapabilities>()}),
    ("NMSecretAgentError", Layout {size: size_of::<NMSecretAgentError>(), alignment: align_of::<NMSecretAgentError>()}),
    ("NMSecretAgentGetSecretsFlags", Layout {size: size_of::<NMSecretAgentGetSecretsFlags>(), alignment: align_of::<NMSecretAgentGetSecretsFlags>()}),
    ("NMSecretAgentOld", Layout {size: size_of::<NMSecretAgentOld>(), alignment: align_of::<NMSecretAgentOld>()}),
    ("NMSecretAgentOldClass", Layout {size: size_of::<NMSecretAgentOldClass>(), alignment: align_of::<NMSecretAgentOldClass>()}),
    ("NMSetting", Layout {size: size_of::<NMSetting>(), alignment: align_of::<NMSetting>()}),
    ("NMSetting8021x", Layout {size: size_of::<NMSetting8021x>(), alignment: align_of::<NMSetting8021x>()}),
    ("NMSetting8021xAuthFlags", Layout {size: size_of::<NMSetting8021xAuthFlags>(), alignment: align_of::<NMSetting8021xAuthFlags>()}),
    ("NMSetting8021xCKFormat", Layout {size: size_of::<NMSetting8021xCKFormat>(), alignment: align_of::<NMSetting8021xCKFormat>()}),
    ("NMSetting8021xCKScheme", Layout {size: size_of::<NMSetting8021xCKScheme>(), alignment: align_of::<NMSetting8021xCKScheme>()}),
    ("NMSetting8021xClass", Layout {size: size_of::<NMSetting8021xClass>(), alignment: align_of::<NMSetting8021xClass>()}),
    ("NMSettingAdsl", Layout {size: size_of::<NMSettingAdsl>(), alignment: align_of::<NMSettingAdsl>()}),
    ("NMSettingAdslClass", Layout {size: size_of::<NMSettingAdslClass>(), alignment: align_of::<NMSettingAdslClass>()}),
    ("NMSettingBluetooth", Layout {size: size_of::<NMSettingBluetooth>(), alignment: align_of::<NMSettingBluetooth>()}),
    ("NMSettingBluetoothClass", Layout {size: size_of::<NMSettingBluetoothClass>(), alignment: align_of::<NMSettingBluetoothClass>()}),
    ("NMSettingBond", Layout {size: size_of::<NMSettingBond>(), alignment: align_of::<NMSettingBond>()}),
    ("NMSettingBondClass", Layout {size: size_of::<NMSettingBondClass>(), alignment: align_of::<NMSettingBondClass>()}),
    ("NMSettingBridge", Layout {size: size_of::<NMSettingBridge>(), alignment: align_of::<NMSettingBridge>()}),
    ("NMSettingBridgeClass", Layout {size: size_of::<NMSettingBridgeClass>(), alignment: align_of::<NMSettingBridgeClass>()}),
    ("NMSettingBridgePort", Layout {size: size_of::<NMSettingBridgePort>(), alignment: align_of::<NMSettingBridgePort>()}),
    ("NMSettingBridgePortClass", Layout {size: size_of::<NMSettingBridgePortClass>(), alignment: align_of::<NMSettingBridgePortClass>()}),
    ("NMSettingCdma", Layout {size: size_of::<NMSettingCdma>(), alignment: align_of::<NMSettingCdma>()}),
    ("NMSettingCdmaClass", Layout {size: size_of::<NMSettingCdmaClass>(), alignment: align_of::<NMSettingCdmaClass>()}),
    ("NMSettingClass", Layout {size: size_of::<NMSettingClass>(), alignment: align_of::<NMSettingClass>()}),
    ("NMSettingCompareFlags", Layout {size: size_of::<NMSettingCompareFlags>(), alignment: align_of::<NMSettingCompareFlags>()}),
    ("NMSettingConnection", Layout {size: size_of::<NMSettingConnection>(), alignment: align_of::<NMSettingConnection>()}),
    ("NMSettingConnectionAutoconnectSlaves", Layout {size: size_of::<NMSettingConnectionAutoconnectSlaves>(), alignment: align_of::<NMSettingConnectionAutoconnectSlaves>()}),
    ("NMSettingConnectionClass", Layout {size: size_of::<NMSettingConnectionClass>(), alignment: align_of::<NMSettingConnectionClass>()}),
    ("NMSettingConnectionLldp", Layout {size: size_of::<NMSettingConnectionLldp>(), alignment: align_of::<NMSettingConnectionLldp>()}),
    ("NMSettingDcb", Layout {size: size_of::<NMSettingDcb>(), alignment: align_of::<NMSettingDcb>()}),
    ("NMSettingDcbClass", Layout {size: size_of::<NMSettingDcbClass>(), alignment: align_of::<NMSettingDcbClass>()}),
    ("NMSettingDcbFlags", Layout {size: size_of::<NMSettingDcbFlags>(), alignment: align_of::<NMSettingDcbFlags>()}),
    ("NMSettingDiffResult", Layout {size: size_of::<NMSettingDiffResult>(), alignment: align_of::<NMSettingDiffResult>()}),
    ("NMSettingDummy", Layout {size: size_of::<NMSettingDummy>(), alignment: align_of::<NMSettingDummy>()}),
    ("NMSettingDummyClass", Layout {size: size_of::<NMSettingDummyClass>(), alignment: align_of::<NMSettingDummyClass>()}),
    ("NMSettingGeneric", Layout {size: size_of::<NMSettingGeneric>(), alignment: align_of::<NMSettingGeneric>()}),
    ("NMSettingGenericClass", Layout {size: size_of::<NMSettingGenericClass>(), alignment: align_of::<NMSettingGenericClass>()}),
    ("NMSettingGsm", Layout {size: size_of::<NMSettingGsm>(), alignment: align_of::<NMSettingGsm>()}),
    ("NMSettingGsmClass", Layout {size: size_of::<NMSettingGsmClass>(), alignment: align_of::<NMSettingGsmClass>()}),
    ("NMSettingIP4Config", Layout {size: size_of::<NMSettingIP4Config>(), alignment: align_of::<NMSettingIP4Config>()}),
    ("NMSettingIP4ConfigClass", Layout {size: size_of::<NMSettingIP4ConfigClass>(), alignment: align_of::<NMSettingIP4ConfigClass>()}),
    ("NMSettingIP6Config", Layout {size: size_of::<NMSettingIP6Config>(), alignment: align_of::<NMSettingIP6Config>()}),
    ("NMSettingIP6ConfigAddrGenMode", Layout {size: size_of::<NMSettingIP6ConfigAddrGenMode>(), alignment: align_of::<NMSettingIP6ConfigAddrGenMode>()}),
    ("NMSettingIP6ConfigClass", Layout {size: size_of::<NMSettingIP6ConfigClass>(), alignment: align_of::<NMSettingIP6ConfigClass>()}),
    ("NMSettingIP6ConfigPrivacy", Layout {size: size_of::<NMSettingIP6ConfigPrivacy>(), alignment: align_of::<NMSettingIP6ConfigPrivacy>()}),
    ("NMSettingIPConfig", Layout {size: size_of::<NMSettingIPConfig>(), alignment: align_of::<NMSettingIPConfig>()}),
    ("NMSettingIPConfigClass", Layout {size: size_of::<NMSettingIPConfigClass>(), alignment: align_of::<NMSettingIPConfigClass>()}),
    ("NMSettingIPTunnel", Layout {size: size_of::<NMSettingIPTunnel>(), alignment: align_of::<NMSettingIPTunnel>()}),
    ("NMSettingIPTunnelClass", Layout {size: size_of::<NMSettingIPTunnelClass>(), alignment: align_of::<NMSettingIPTunnelClass>()}),
    ("NMSettingInfiniband", Layout {size: size_of::<NMSettingInfiniband>(), alignment: align_of::<NMSettingInfiniband>()}),
    ("NMSettingInfinibandClass", Layout {size: size_of::<NMSettingInfinibandClass>(), alignment: align_of::<NMSettingInfinibandClass>()}),
    ("NMSettingMacRandomization", Layout {size: size_of::<NMSettingMacRandomization>(), alignment: align_of::<NMSettingMacRandomization>()}),
    ("NMSettingMacsec", Layout {size: size_of::<NMSettingMacsec>(), alignment: align_of::<NMSettingMacsec>()}),
    ("NMSettingMacsecClass", Layout {size: size_of::<NMSettingMacsecClass>(), alignment: align_of::<NMSettingMacsecClass>()}),
    ("NMSettingMacsecMode", Layout {size: size_of::<NMSettingMacsecMode>(), alignment: align_of::<NMSettingMacsecMode>()}),
    ("NMSettingMacsecValidation", Layout {size: size_of::<NMSettingMacsecValidation>(), alignment: align_of::<NMSettingMacsecValidation>()}),
    ("NMSettingMacvlan", Layout {size: size_of::<NMSettingMacvlan>(), alignment: align_of::<NMSettingMacvlan>()}),
    ("NMSettingMacvlanClass", Layout {size: size_of::<NMSettingMacvlanClass>(), alignment: align_of::<NMSettingMacvlanClass>()}),
    ("NMSettingMacvlanMode", Layout {size: size_of::<NMSettingMacvlanMode>(), alignment: align_of::<NMSettingMacvlanMode>()}),
    ("NMSettingOlpcMesh", Layout {size: size_of::<NMSettingOlpcMesh>(), alignment: align_of::<NMSettingOlpcMesh>()}),
    ("NMSettingOlpcMeshClass", Layout {size: size_of::<NMSettingOlpcMeshClass>(), alignment: align_of::<NMSettingOlpcMeshClass>()}),
    ("NMSettingPpp", Layout {size: size_of::<NMSettingPpp>(), alignment: align_of::<NMSettingPpp>()}),
    ("NMSettingPppClass", Layout {size: size_of::<NMSettingPppClass>(), alignment: align_of::<NMSettingPppClass>()}),
    ("NMSettingPppoe", Layout {size: size_of::<NMSettingPppoe>(), alignment: align_of::<NMSettingPppoe>()}),
    ("NMSettingPppoeClass", Layout {size: size_of::<NMSettingPppoeClass>(), alignment: align_of::<NMSettingPppoeClass>()}),
    ("NMSettingProxy", Layout {size: size_of::<NMSettingProxy>(), alignment: align_of::<NMSettingProxy>()}),
    ("NMSettingProxyClass", Layout {size: size_of::<NMSettingProxyClass>(), alignment: align_of::<NMSettingProxyClass>()}),
    ("NMSettingProxyMethod", Layout {size: size_of::<NMSettingProxyMethod>(), alignment: align_of::<NMSettingProxyMethod>()}),
    ("NMSettingSecretFlags", Layout {size: size_of::<NMSettingSecretFlags>(), alignment: align_of::<NMSettingSecretFlags>()}),
    ("NMSettingSerial", Layout {size: size_of::<NMSettingSerial>(), alignment: align_of::<NMSettingSerial>()}),
    ("NMSettingSerialClass", Layout {size: size_of::<NMSettingSerialClass>(), alignment: align_of::<NMSettingSerialClass>()}),
    ("NMSettingSerialParity", Layout {size: size_of::<NMSettingSerialParity>(), alignment: align_of::<NMSettingSerialParity>()}),
    ("NMSettingTeam", Layout {size: size_of::<NMSettingTeam>(), alignment: align_of::<NMSettingTeam>()}),
    ("NMSettingTeamClass", Layout {size: size_of::<NMSettingTeamClass>(), alignment: align_of::<NMSettingTeamClass>()}),
    ("NMSettingTeamPort", Layout {size: size_of::<NMSettingTeamPort>(), alignment: align_of::<NMSettingTeamPort>()}),
    ("NMSettingTeamPortClass", Layout {size: size_of::<NMSettingTeamPortClass>(), alignment: align_of::<NMSettingTeamPortClass>()}),
    ("NMSettingTun", Layout {size: size_of::<NMSettingTun>(), alignment: align_of::<NMSettingTun>()}),
    ("NMSettingTunClass", Layout {size: size_of::<NMSettingTunClass>(), alignment: align_of::<NMSettingTunClass>()}),
    ("NMSettingTunMode", Layout {size: size_of::<NMSettingTunMode>(), alignment: align_of::<NMSettingTunMode>()}),
    ("NMSettingVlan", Layout {size: size_of::<NMSettingVlan>(), alignment: align_of::<NMSettingVlan>()}),
    ("NMSettingVlanClass", Layout {size: size_of::<NMSettingVlanClass>(), alignment: align_of::<NMSettingVlanClass>()}),
    ("NMSettingVpn", Layout {size: size_of::<NMSettingVpn>(), alignment: align_of::<NMSettingVpn>()}),
    ("NMSettingVpnClass", Layout {size: size_of::<NMSettingVpnClass>(), alignment: align_of::<NMSettingVpnClass>()}),
    ("NMSettingVxlan", Layout {size: size_of::<NMSettingVxlan>(), alignment: align_of::<NMSettingVxlan>()}),
    ("NMSettingVxlanClass", Layout {size: size_of::<NMSettingVxlanClass>(), alignment: align_of::<NMSettingVxlanClass>()}),
    ("NMSettingWimax", Layout {size: size_of::<NMSettingWimax>(), alignment: align_of::<NMSettingWimax>()}),
    ("NMSettingWimaxClass", Layout {size: size_of::<NMSettingWimaxClass>(), alignment: align_of::<NMSettingWimaxClass>()}),
    ("NMSettingWired", Layout {size: size_of::<NMSettingWired>(), alignment: align_of::<NMSettingWired>()}),
    ("NMSettingWiredClass", Layout {size: size_of::<NMSettingWiredClass>(), alignment: align_of::<NMSettingWiredClass>()}),
    ("NMSettingWiredWakeOnLan", Layout {size: size_of::<NMSettingWiredWakeOnLan>(), alignment: align_of::<NMSettingWiredWakeOnLan>()}),
    ("NMSettingWireless", Layout {size: size_of::<NMSettingWireless>(), alignment: align_of::<NMSettingWireless>()}),
    ("NMSettingWirelessClass", Layout {size: size_of::<NMSettingWirelessClass>(), alignment: align_of::<NMSettingWirelessClass>()}),
    ("NMSettingWirelessPowersave", Layout {size: size_of::<NMSettingWirelessPowersave>(), alignment: align_of::<NMSettingWirelessPowersave>()}),
    ("NMSettingWirelessSecurity", Layout {size: size_of::<NMSettingWirelessSecurity>(), alignment: align_of::<NMSettingWirelessSecurity>()}),
    ("NMSettingWirelessSecurityClass", Layout {size: size_of::<NMSettingWirelessSecurityClass>(), alignment: align_of::<NMSettingWirelessSecurityClass>()}),
    ("NMSettingsError", Layout {size: size_of::<NMSettingsError>(), alignment: align_of::<NMSettingsError>()}),
    ("NMSimpleConnection", Layout {size: size_of::<NMSimpleConnection>(), alignment: align_of::<NMSimpleConnection>()}),
    ("NMSimpleConnectionClass", Layout {size: size_of::<NMSimpleConnectionClass>(), alignment: align_of::<NMSimpleConnectionClass>()}),
    ("NMState", Layout {size: size_of::<NMState>(), alignment: align_of::<NMState>()}),
    ("NMUtilsSecurityType", Layout {size: size_of::<NMUtilsSecurityType>(), alignment: align_of::<NMUtilsSecurityType>()}),
    ("NMVlanFlags", Layout {size: size_of::<NMVlanFlags>(), alignment: align_of::<NMVlanFlags>()}),
    ("NMVlanPriorityMap", Layout {size: size_of::<NMVlanPriorityMap>(), alignment: align_of::<NMVlanPriorityMap>()}),
    ("NMVpnConnection", Layout {size: size_of::<NMVpnConnection>(), alignment: align_of::<NMVpnConnection>()}),
    ("NMVpnConnectionClass", Layout {size: size_of::<NMVpnConnectionClass>(), alignment: align_of::<NMVpnConnectionClass>()}),
    ("NMVpnConnectionState", Layout {size: size_of::<NMVpnConnectionState>(), alignment: align_of::<NMVpnConnectionState>()}),
    ("NMVpnConnectionStateReason", Layout {size: size_of::<NMVpnConnectionStateReason>(), alignment: align_of::<NMVpnConnectionStateReason>()}),
    ("NMVpnEditorInterface", Layout {size: size_of::<NMVpnEditorInterface>(), alignment: align_of::<NMVpnEditorInterface>()}),
    ("NMVpnEditorPluginCapability", Layout {size: size_of::<NMVpnEditorPluginCapability>(), alignment: align_of::<NMVpnEditorPluginCapability>()}),
    ("NMVpnEditorPluginInterface", Layout {size: size_of::<NMVpnEditorPluginInterface>(), alignment: align_of::<NMVpnEditorPluginInterface>()}),
    ("NMVpnPluginError", Layout {size: size_of::<NMVpnPluginError>(), alignment: align_of::<NMVpnPluginError>()}),
    ("NMVpnPluginFailure", Layout {size: size_of::<NMVpnPluginFailure>(), alignment: align_of::<NMVpnPluginFailure>()}),
    ("NMVpnPluginInfo", Layout {size: size_of::<NMVpnPluginInfo>(), alignment: align_of::<NMVpnPluginInfo>()}),
    ("NMVpnPluginInfoClass", Layout {size: size_of::<NMVpnPluginInfoClass>(), alignment: align_of::<NMVpnPluginInfoClass>()}),
    ("NMVpnPluginOld", Layout {size: size_of::<NMVpnPluginOld>(), alignment: align_of::<NMVpnPluginOld>()}),
    ("NMVpnPluginOldClass", Layout {size: size_of::<NMVpnPluginOldClass>(), alignment: align_of::<NMVpnPluginOldClass>()}),
    ("NMVpnServicePlugin", Layout {size: size_of::<NMVpnServicePlugin>(), alignment: align_of::<NMVpnServicePlugin>()}),
    ("NMVpnServicePluginClass", Layout {size: size_of::<NMVpnServicePluginClass>(), alignment: align_of::<NMVpnServicePluginClass>()}),
    ("NMVpnServiceState", Layout {size: size_of::<NMVpnServiceState>(), alignment: align_of::<NMVpnServiceState>()}),
    ("NMWepKeyType", Layout {size: size_of::<NMWepKeyType>(), alignment: align_of::<NMWepKeyType>()}),
    ("NMWimaxNsp", Layout {size: size_of::<NMWimaxNsp>(), alignment: align_of::<NMWimaxNsp>()}),
    ("NMWimaxNspClass", Layout {size: size_of::<NMWimaxNspClass>(), alignment: align_of::<NMWimaxNspClass>()}),
    ("NMWimaxNspNetworkType", Layout {size: size_of::<NMWimaxNspNetworkType>(), alignment: align_of::<NMWimaxNspNetworkType>()}),
];

const RUST_CONSTANTS: &[(&str, &str)] = &[
    ("NMU_SEC_DYNAMIC_WEP", "4"),
    ("NMU_SEC_INVALID", "0"),
    ("NMU_SEC_LEAP", "3"),
    ("NMU_SEC_NONE", "1"),
    ("NMU_SEC_STATIC_WEP", "2"),
    ("NMU_SEC_WPA2_ENTERPRISE", "8"),
    ("NMU_SEC_WPA2_PSK", "7"),
    ("NMU_SEC_WPA_ENTERPRISE", "6"),
    ("NMU_SEC_WPA_PSK", "5"),
    ("NM_802_11_AP_FLAGS_NONE", "0"),
    ("NM_802_11_AP_FLAGS_PRIVACY", "1"),
    ("NM_802_11_AP_SEC_GROUP_CCMP", "128"),
    ("NM_802_11_AP_SEC_GROUP_TKIP", "64"),
    ("NM_802_11_AP_SEC_GROUP_WEP104", "32"),
    ("NM_802_11_AP_SEC_GROUP_WEP40", "16"),
    ("NM_802_11_AP_SEC_KEY_MGMT_802_1X", "512"),
    ("NM_802_11_AP_SEC_KEY_MGMT_PSK", "256"),
    ("NM_802_11_AP_SEC_NONE", "0"),
    ("NM_802_11_AP_SEC_PAIR_CCMP", "8"),
    ("NM_802_11_AP_SEC_PAIR_TKIP", "4"),
    ("NM_802_11_AP_SEC_PAIR_WEP104", "2"),
    ("NM_802_11_AP_SEC_PAIR_WEP40", "1"),
    ("NM_802_11_MODE_ADHOC", "1"),
    ("NM_802_11_MODE_AP", "3"),
    ("NM_802_11_MODE_INFRA", "2"),
    ("NM_802_11_MODE_UNKNOWN", "0"),
    ("NM_ACCESS_POINT_BSSID", "bssid"),
    ("NM_ACCESS_POINT_FLAGS", "flags"),
    ("NM_ACCESS_POINT_FREQUENCY", "frequency"),
    ("NM_ACCESS_POINT_HW_ADDRESS", "hw-address"),
    ("NM_ACCESS_POINT_LAST_SEEN", "last-seen"),
    ("NM_ACCESS_POINT_MAX_BITRATE", "max-bitrate"),
    ("NM_ACCESS_POINT_MODE", "mode"),
    ("NM_ACCESS_POINT_RSN_FLAGS", "rsn-flags"),
    ("NM_ACCESS_POINT_SSID", "ssid"),
    ("NM_ACCESS_POINT_STRENGTH", "strength"),
    ("NM_ACCESS_POINT_WPA_FLAGS", "wpa-flags"),
    ("NM_ACTIVE_CONNECTION_CONNECTION", "connection"),
    ("NM_ACTIVE_CONNECTION_DEFAULT", "default"),
    ("NM_ACTIVE_CONNECTION_DEFAULT6", "default6"),
    ("NM_ACTIVE_CONNECTION_DEVICES", "devices"),
    ("NM_ACTIVE_CONNECTION_DHCP4_CONFIG", "dhcp4-config"),
    ("NM_ACTIVE_CONNECTION_DHCP6_CONFIG", "dhcp6-config"),
    ("NM_ACTIVE_CONNECTION_ID", "id"),
    ("NM_ACTIVE_CONNECTION_IP4_CONFIG", "ip4-config"),
    ("NM_ACTIVE_CONNECTION_IP6_CONFIG", "ip6-config"),
    ("NM_ACTIVE_CONNECTION_MASTER", "master"),
    ("NM_ACTIVE_CONNECTION_SPECIFIC_OBJECT_PATH", "specific-object-path"),
    ("NM_ACTIVE_CONNECTION_STATE", "state"),
    ("NM_ACTIVE_CONNECTION_STATE_ACTIVATED", "2"),
    ("NM_ACTIVE_CONNECTION_STATE_ACTIVATING", "1"),
    ("NM_ACTIVE_CONNECTION_STATE_DEACTIVATED", "4"),
    ("NM_ACTIVE_CONNECTION_STATE_DEACTIVATING", "3"),
    ("NM_ACTIVE_CONNECTION_STATE_REASON_CONNECTION_REMOVED", "11"),
    ("NM_ACTIVE_CONNECTION_STATE_REASON_CONNECT_TIMEOUT", "6"),
    ("NM_ACTIVE_CONNECTION_STATE_REASON_DEPENDENCY_FAILED", "12"),
    ("NM_ACTIVE_CONNECTION_STATE_REASON_DEVICE_DISCONNECTED", "3"),
    ("NM_ACTIVE_CONNECTION_STATE_REASON_DEVICE_REALIZE_FAILED", "13"),
    ("NM_ACTIVE_CONNECTION_STATE_REASON_DEVICE_REMOVED", "14"),
    ("NM_ACTIVE_CONNECTION_STATE_REASON_IP_CONFIG_INVALID", "5"),
    ("NM_ACTIVE_CONNECTION_STATE_REASON_LOGIN_FAILED", "10"),
    ("NM_ACTIVE_CONNECTION_STATE_REASON_NONE", "1"),
    ("NM_ACTIVE_CONNECTION_STATE_REASON_NO_SECRETS", "9"),
    ("NM_ACTIVE_CONNECTION_STATE_REASON_SERVICE_START_FAILED", "8"),
    ("NM_ACTIVE_CONNECTION_STATE_REASON_SERVICE_START_TIMEOUT", "7"),
    ("NM_ACTIVE_CONNECTION_STATE_REASON_SERVICE_STOPPED", "4"),
    ("NM_ACTIVE_CONNECTION_STATE_REASON_UNKNOWN", "0"),
    ("NM_ACTIVE_CONNECTION_STATE_REASON_USER_DISCONNECTED", "2"),
    ("NM_ACTIVE_CONNECTION_STATE_UNKNOWN", "0"),
    ("NM_ACTIVE_CONNECTION_TYPE", "type"),
    ("NM_ACTIVE_CONNECTION_UUID", "uuid"),
    ("NM_ACTIVE_CONNECTION_VPN", "vpn"),
    ("NM_AGENT_MANAGER_ERROR_FAILED", "0"),
    ("NM_AGENT_MANAGER_ERROR_INVALID_IDENTIFIER", "2"),
    ("NM_AGENT_MANAGER_ERROR_NOT_REGISTERED", "3"),
    ("NM_AGENT_MANAGER_ERROR_NO_SECRETS", "4"),
    ("NM_AGENT_MANAGER_ERROR_PERMISSION_DENIED", "1"),
    ("NM_AGENT_MANAGER_ERROR_USER_CANCELED", "5"),
    ("NM_BT_CAPABILITY_DUN", "1"),
    ("NM_BT_CAPABILITY_NAP", "2"),
    ("NM_BT_CAPABILITY_NONE", "0"),
    ("NM_CAPABILITY_TEAM", "1"),
    ("NM_CHECKPOINT_CREATE_FLAG_DELETE_NEW_CONNECTIONS", "2"),
    ("NM_CHECKPOINT_CREATE_FLAG_DESTROY_ALL", "1"),
    ("NM_CHECKPOINT_CREATE_FLAG_DISCONNECT_NEW_DEVICES", "4"),
    ("NM_CHECKPOINT_CREATE_FLAG_NONE", "0"),
    ("NM_CLIENT_ACTIVATING_CONNECTION", "activating-connection"),
    ("NM_CLIENT_ACTIVE_CONNECTIONS", "active-connections"),
    ("NM_CLIENT_ACTIVE_CONNECTION_ADDED", "active-connection-added"),
    ("NM_CLIENT_ACTIVE_CONNECTION_REMOVED", "active-connection-removed"),
    ("NM_CLIENT_ALL_DEVICES", "all-devices"),
    ("NM_CLIENT_ANY_DEVICE_ADDED", "any-device-added"),
    ("NM_CLIENT_ANY_DEVICE_REMOVED", "any-device-removed"),
    ("NM_CLIENT_CAN_MODIFY", "can-modify"),
    ("NM_CLIENT_CONNECTIONS", "connections"),
    ("NM_CLIENT_CONNECTION_ADDED", "connection-added"),
    ("NM_CLIENT_CONNECTION_REMOVED", "connection-removed"),
    ("NM_CLIENT_CONNECTIVITY", "connectivity"),
    ("NM_CLIENT_DEVICES", "devices"),
    ("NM_CLIENT_DEVICE_ADDED", "device-added"),
    ("NM_CLIENT_DEVICE_REMOVED", "device-removed"),
    ("NM_CLIENT_DNS_CONFIGURATION", "dns-configuration"),
    ("NM_CLIENT_DNS_MODE", "dns-mode"),
    ("NM_CLIENT_DNS_RC_MANAGER", "dns-rc-manager"),
    ("NM_CLIENT_ERROR_FAILED", "0"),
    ("NM_CLIENT_ERROR_MANAGER_NOT_RUNNING", "1"),
    ("NM_CLIENT_ERROR_OBJECT_CREATION_FAILED", "2"),
    ("NM_CLIENT_HOSTNAME", "hostname"),
    ("NM_CLIENT_METERED", "metered"),
    ("NM_CLIENT_NETWORKING_ENABLED", "networking-enabled"),
    ("NM_CLIENT_NM_RUNNING", "nm-running"),
    ("NM_CLIENT_PERMISSION_CHANGED", "permission-changed"),
    ("NM_CLIENT_PERMISSION_CHECKPOINT_ROLLBACK", "14"),
    ("NM_CLIENT_PERMISSION_ENABLE_DISABLE_NETWORK", "1"),
    ("NM_CLIENT_PERMISSION_ENABLE_DISABLE_STATISTICS", "15"),
    ("NM_CLIENT_PERMISSION_ENABLE_DISABLE_WIFI", "2"),
    ("NM_CLIENT_PERMISSION_ENABLE_DISABLE_WIMAX", "4"),
    ("NM_CLIENT_PERMISSION_ENABLE_DISABLE_WWAN", "3"),
    ("NM_CLIENT_PERMISSION_LAST", "15"),
    ("NM_CLIENT_PERMISSION_NETWORK_CONTROL", "6"),
    ("NM_CLIENT_PERMISSION_NONE", "0"),
    ("NM_CLIENT_PERMISSION_RELOAD", "13"),
    ("NM_CLIENT_PERMISSION_RESULT_AUTH", "2"),
    ("NM_CLIENT_PERMISSION_RESULT_NO", "3"),
    ("NM_CLIENT_PERMISSION_RESULT_UNKNOWN", "0"),
    ("NM_CLIENT_PERMISSION_RESULT_YES", "1"),
    ("NM_CLIENT_PERMISSION_SETTINGS_MODIFY_GLOBAL_DNS", "12"),
    ("NM_CLIENT_PERMISSION_SETTINGS_MODIFY_HOSTNAME", "11"),
    ("NM_CLIENT_PERMISSION_SETTINGS_MODIFY_OWN", "10"),
    ("NM_CLIENT_PERMISSION_SETTINGS_MODIFY_SYSTEM", "9"),
    ("NM_CLIENT_PERMISSION_SLEEP_WAKE", "5"),
    ("NM_CLIENT_PERMISSION_WIFI_SHARE_OPEN", "8"),
    ("NM_CLIENT_PERMISSION_WIFI_SHARE_PROTECTED", "7"),
    ("NM_CLIENT_PRIMARY_CONNECTION", "primary-connection"),
    ("NM_CLIENT_STARTUP", "startup"),
    ("NM_CLIENT_STATE", "state"),
    ("NM_CLIENT_VERSION", "version"),
    ("NM_CLIENT_WIMAX_ENABLED", "wimax-enabled"),
    ("NM_CLIENT_WIMAX_HARDWARE_ENABLED", "wimax-hardware-enabled"),
    ("NM_CLIENT_WIRELESS_ENABLED", "wireless-enabled"),
    ("NM_CLIENT_WIRELESS_HARDWARE_ENABLED", "wireless-hardware-enabled"),
    ("NM_CLIENT_WWAN_ENABLED", "wwan-enabled"),
    ("NM_CLIENT_WWAN_HARDWARE_ENABLED", "wwan-hardware-enabled"),
    ("NM_CONNECTION_CHANGED", "changed"),
    ("NM_CONNECTION_ERROR_FAILED", "0"),
    ("NM_CONNECTION_ERROR_INVALID_PROPERTY", "7"),
    ("NM_CONNECTION_ERROR_INVALID_SETTING", "5"),
    ("NM_CONNECTION_ERROR_MISSING_PROPERTY", "6"),
    ("NM_CONNECTION_ERROR_MISSING_SETTING", "4"),
    ("NM_CONNECTION_ERROR_PROPERTY_NOT_FOUND", "2"),
    ("NM_CONNECTION_ERROR_PROPERTY_NOT_SECRET", "3"),
    ("NM_CONNECTION_ERROR_SETTING_NOT_FOUND", "1"),
    ("NM_CONNECTION_NORMALIZE_PARAM_IP6_CONFIG_METHOD", "ip6-config-method"),
    ("NM_CONNECTION_SECRETS_CLEARED", "secrets-cleared"),
    ("NM_CONNECTION_SECRETS_UPDATED", "secrets-updated"),
    ("NM_CONNECTION_SERIALIZE_ALL", "0"),
    ("NM_CONNECTION_SERIALIZE_NO_SECRETS", "1"),
    ("NM_CONNECTION_SERIALIZE_ONLY_SECRETS", "2"),
    ("NM_CONNECTIVITY_FULL", "4"),
    ("NM_CONNECTIVITY_LIMITED", "3"),
    ("NM_CONNECTIVITY_NONE", "1"),
    ("NM_CONNECTIVITY_PORTAL", "2"),
    ("NM_CONNECTIVITY_UNKNOWN", "0"),
    ("NM_CRYPTO_ERROR_DECRYPTION_FAILED", "4"),
    ("NM_CRYPTO_ERROR_ENCRYPTION_FAILED", "5"),
    ("NM_CRYPTO_ERROR_FAILED", "0"),
    ("NM_CRYPTO_ERROR_INVALID_DATA", "1"),
    ("NM_CRYPTO_ERROR_INVALID_PASSWORD", "2"),
    ("NM_CRYPTO_ERROR_UNKNOWN_CIPHER", "3"),
    ("NM_DBUS_INTERFACE", "org.freedesktop.NetworkManager"),
    ("NM_DBUS_INTERFACE_DNS_MANAGER", "org.freedesktop.NetworkManager.DnsManager"),
    ("NM_DBUS_INTERFACE_SETTINGS", "org.freedesktop.NetworkManager.Settings"),
    ("NM_DBUS_INTERFACE_SETTINGS_CONNECTION", "org.freedesktop.NetworkManager.Settings.Connection"),
    ("NM_DBUS_INTERFACE_SETTINGS_CONNECTION_SECRETS", "org.freedesktop.NetworkManager.Settings.Connection.Secrets"),
    ("NM_DBUS_INTERFACE_VPN", "org.freedesktop.NetworkManager.VPN.Manager"),
    ("NM_DBUS_INTERFACE_VPN_CONNECTION", "org.freedesktop.NetworkManager.VPN.Connection"),
    ("NM_DBUS_INVALID_VPN_CONNECTION", "org.freedesktop.NetworkManager.VPNConnections.InvalidVPNConnection"),
    ("NM_DBUS_NO_ACTIVE_VPN_CONNECTION", "org.freedesktop.NetworkManager.VPNConnections.NoActiveVPNConnection"),
    ("NM_DBUS_NO_VPN_CONNECTIONS", "org.freedesktop.NetworkManager.VPNConnections.NoVPNConnections"),
    ("NM_DBUS_PATH", "/org/freedesktop/NetworkManager"),
    ("NM_DBUS_PATH_AGENT_MANAGER", "/org/freedesktop/NetworkManager/AgentManager"),
    ("NM_DBUS_PATH_DNS_MANAGER", "/org/freedesktop/NetworkManager/DnsManager"),
    ("NM_DBUS_PATH_SECRET_AGENT", "/org/freedesktop/NetworkManager/SecretAgent"),
    ("NM_DBUS_PATH_SETTINGS", "/org/freedesktop/NetworkManager/Settings"),
    ("NM_DBUS_PATH_SETTINGS_CONNECTION", "/org/freedesktop/NetworkManager/Settings/Connection"),
    ("NM_DBUS_PATH_VPN", "/org/freedesktop/NetworkManager/VPN/Manager"),
    ("NM_DBUS_PATH_VPN_CONNECTION", "/org/freedesktop/NetworkManager/VPN/Connection"),
    ("NM_DBUS_SERVICE", "org.freedesktop.NetworkManager"),
    ("NM_DBUS_VPN_ALREADY_STARTED", "AlreadyStarted"),
    ("NM_DBUS_VPN_ALREADY_STOPPED", "AlreadyStopped"),
    ("NM_DBUS_VPN_BAD_ARGUMENTS", "BadArguments"),
    ("NM_DBUS_VPN_ERROR_PREFIX", "org.freedesktop.NetworkManager.VPN.Error"),
    ("NM_DBUS_VPN_INTERACTIVE_NOT_SUPPORTED", "InteractiveNotSupported"),
    ("NM_DBUS_VPN_SIGNAL_CONNECT_FAILED", "ConnectFailed"),
    ("NM_DBUS_VPN_SIGNAL_IP4_CONFIG", "IP4Config"),
    ("NM_DBUS_VPN_SIGNAL_IP_CONFIG_BAD", "IPConfigBad"),
    ("NM_DBUS_VPN_SIGNAL_LAUNCH_FAILED", "LaunchFailed"),
    ("NM_DBUS_VPN_SIGNAL_LOGIN_BANNER", "LoginBanner"),
    ("NM_DBUS_VPN_SIGNAL_LOGIN_FAILED", "LoginFailed"),
    ("NM_DBUS_VPN_SIGNAL_STATE_CHANGE", "StateChange"),
    ("NM_DBUS_VPN_SIGNAL_VPN_CONFIG_BAD", "VPNConfigBad"),
    ("NM_DBUS_VPN_STARTING_IN_PROGRESS", "StartingInProgress"),
    ("NM_DBUS_VPN_STOPPING_IN_PROGRESS", "StoppingInProgress"),
    ("NM_DBUS_VPN_WRONG_STATE", "WrongState"),
    ("NM_DEVICE_ACTIVE_CONNECTION", "active-connection"),
    ("NM_DEVICE_ADSL_CARRIER", "carrier"),
    ("NM_DEVICE_AUTOCONNECT", "autoconnect"),
    ("NM_DEVICE_AVAILABLE_CONNECTIONS", "available-connections"),
    ("NM_DEVICE_BOND_CARRIER", "carrier"),
    ("NM_DEVICE_BOND_HW_ADDRESS", "hw-address"),
    ("NM_DEVICE_BOND_SLAVES", "slaves"),
    ("NM_DEVICE_BRIDGE_CARRIER", "carrier"),
    ("NM_DEVICE_BRIDGE_HW_ADDRESS", "hw-address"),
    ("NM_DEVICE_BRIDGE_SLAVES", "slaves"),
    ("NM_DEVICE_BT_CAPABILITIES", "bt-capabilities"),
    ("NM_DEVICE_BT_HW_ADDRESS", "hw-address"),
    ("NM_DEVICE_BT_NAME", "name"),
    ("NM_DEVICE_CAPABILITIES", "capabilities"),
    ("NM_DEVICE_CAP_CARRIER_DETECT", "2"),
    ("NM_DEVICE_CAP_IS_SOFTWARE", "4"),
    ("NM_DEVICE_CAP_NM_SUPPORTED", "1"),
    ("NM_DEVICE_CAP_NONE", "0"),
    ("NM_DEVICE_CAP_SRIOV", "8"),
    ("NM_DEVICE_DEVICE_TYPE", "device-type"),
    ("NM_DEVICE_DHCP4_CONFIG", "dhcp4-config"),
    ("NM_DEVICE_DHCP6_CONFIG", "dhcp6-config"),
    ("NM_DEVICE_DRIVER", "driver"),
    ("NM_DEVICE_DRIVER_VERSION", "driver-version"),
    ("NM_DEVICE_ERROR_CREATION_FAILED", "1"),
    ("NM_DEVICE_ERROR_FAILED", "0"),
    ("NM_DEVICE_ERROR_INCOMPATIBLE_CONNECTION", "3"),
    ("NM_DEVICE_ERROR_INVALID_CONNECTION", "2"),
    ("NM_DEVICE_ERROR_NOT_ACTIVE", "4"),
    ("NM_DEVICE_ERROR_NOT_ALLOWED", "6"),
    ("NM_DEVICE_ERROR_NOT_SOFTWARE", "5"),
    ("NM_DEVICE_ERROR_SPECIFIC_OBJECT_NOT_FOUND", "7"),
    ("NM_DEVICE_ERROR_VERSION_ID_MISMATCH", "8"),
    ("NM_DEVICE_ETHERNET_CARRIER", "carrier"),
    ("NM_DEVICE_ETHERNET_HW_ADDRESS", "hw-address"),
    ("NM_DEVICE_ETHERNET_PERMANENT_HW_ADDRESS", "perm-hw-address"),
    ("NM_DEVICE_ETHERNET_S390_SUBCHANNELS", "s390-subchannels"),
    ("NM_DEVICE_ETHERNET_SPEED", "speed"),
    ("NM_DEVICE_FIRMWARE_MISSING", "firmware-missing"),
    ("NM_DEVICE_FIRMWARE_VERSION", "firmware-version"),
    ("NM_DEVICE_GENERIC_HW_ADDRESS", "hw-address"),
    ("NM_DEVICE_GENERIC_TYPE_DESCRIPTION", "type-description"),
    ("NM_DEVICE_INFINIBAND_CARRIER", "carrier"),
    ("NM_DEVICE_INFINIBAND_HW_ADDRESS", "hw-address"),
    ("NM_DEVICE_INTERFACE", "interface"),
    ("NM_DEVICE_IP4_CONFIG", "ip4-config"),
    ("NM_DEVICE_IP6_CONFIG", "ip6-config"),
    ("NM_DEVICE_IP_INTERFACE", "ip-interface"),
    ("NM_DEVICE_IP_TUNNEL_ENCAPSULATION_LIMIT", "encapsulation-limit"),
    ("NM_DEVICE_IP_TUNNEL_FLOW_LABEL", "flow-label"),
    ("NM_DEVICE_IP_TUNNEL_INPUT_KEY", "input-key"),
    ("NM_DEVICE_IP_TUNNEL_LOCAL", "local"),
    ("NM_DEVICE_IP_TUNNEL_MODE", "mode"),
    ("NM_DEVICE_IP_TUNNEL_OUTPUT_KEY", "output-key"),
    ("NM_DEVICE_IP_TUNNEL_PARENT", "parent"),
    ("NM_DEVICE_IP_TUNNEL_PATH_MTU_DISCOVERY", "path-mtu-discovery"),
    ("NM_DEVICE_IP_TUNNEL_REMOTE", "remote"),
    ("NM_DEVICE_IP_TUNNEL_TOS", "tos"),
    ("NM_DEVICE_IP_TUNNEL_TTL", "ttl"),
    ("NM_DEVICE_LLDP_NEIGHBORS", "lldp-neighbors"),
    ("NM_DEVICE_MACSEC_CIPHER_SUITE", "cipher-suite"),
    ("NM_DEVICE_MACSEC_ENCODING_SA", "encoding-sa"),
    ("NM_DEVICE_MACSEC_ENCRYPT", "encrypt"),
    ("NM_DEVICE_MACSEC_ES", "es"),
    ("NM_DEVICE_MACSEC_HW_ADDRESS", "hw-address"),
    ("NM_DEVICE_MACSEC_ICV_LENGTH", "icv-length"),
    ("NM_DEVICE_MACSEC_INCLUDE_SCI", "include-sci"),
    ("NM_DEVICE_MACSEC_PARENT", "parent"),
    ("NM_DEVICE_MACSEC_PROTECT", "protect"),
    ("NM_DEVICE_MACSEC_REPLAY_PROTECT", "replay-protect"),
    ("NM_DEVICE_MACSEC_SCB", "scb"),
    ("NM_DEVICE_MACSEC_SCI", "sci"),
    ("NM_DEVICE_MACSEC_VALIDATION", "validation"),
    ("NM_DEVICE_MACSEC_WINDOW", "window"),
    ("NM_DEVICE_MACVLAN_HW_ADDRESS", "hw-address"),
    ("NM_DEVICE_MACVLAN_MODE", "mode"),
    ("NM_DEVICE_MACVLAN_NO_PROMISC", "no-promisc"),
    ("NM_DEVICE_MACVLAN_PARENT", "parent"),
    ("NM_DEVICE_MACVLAN_TAP", "tap"),
    ("NM_DEVICE_MANAGED", "managed"),
    ("NM_DEVICE_METERED", "metered"),
    ("NM_DEVICE_MODEM_CAPABILITY_CDMA_EVDO", "2"),
    ("NM_DEVICE_MODEM_CAPABILITY_GSM_UMTS", "4"),
    ("NM_DEVICE_MODEM_CAPABILITY_LTE", "8"),
    ("NM_DEVICE_MODEM_CAPABILITY_NONE", "0"),
    ("NM_DEVICE_MODEM_CAPABILITY_POTS", "1"),
    ("NM_DEVICE_MODEM_CURRENT_CAPABILITIES", "current-capabilities"),
    ("NM_DEVICE_MODEM_MODEM_CAPABILITIES", "modem-capabilities"),
    ("NM_DEVICE_MTU", "mtu"),
    ("NM_DEVICE_NM_PLUGIN_MISSING", "nm-plugin-missing"),
    ("NM_DEVICE_OLPC_MESH_ACTIVE_CHANNEL", "active-channel"),
    ("NM_DEVICE_OLPC_MESH_COMPANION", "companion"),
    ("NM_DEVICE_OLPC_MESH_HW_ADDRESS", "hw-address"),
    ("NM_DEVICE_PHYSICAL_PORT_ID", "physical-port-id"),
    ("NM_DEVICE_PRODUCT", "product"),
    ("NM_DEVICE_REAL", "real"),
    ("NM_DEVICE_STATE", "state"),
    ("NM_DEVICE_STATE_ACTIVATED", "100"),
    ("NM_DEVICE_STATE_CONFIG", "50"),
    ("NM_DEVICE_STATE_DEACTIVATING", "110"),
    ("NM_DEVICE_STATE_DISCONNECTED", "30"),
    ("NM_DEVICE_STATE_FAILED", "120"),
    ("NM_DEVICE_STATE_IP_CHECK", "80"),
    ("NM_DEVICE_STATE_IP_CONFIG", "70"),
    ("NM_DEVICE_STATE_NEED_AUTH", "60"),
    ("NM_DEVICE_STATE_PREPARE", "40"),
    ("NM_DEVICE_STATE_REASON", "state-reason"),
    ("NM_DEVICE_STATE_REASON_AUTOIP_ERROR", "21"),
    ("NM_DEVICE_STATE_REASON_AUTOIP_FAILED", "22"),
    ("NM_DEVICE_STATE_REASON_AUTOIP_START_FAILED", "20"),
    ("NM_DEVICE_STATE_REASON_BR2684_FAILED", "51"),
    ("NM_DEVICE_STATE_REASON_BT_FAILED", "44"),
    ("NM_DEVICE_STATE_REASON_CARRIER", "40"),
    ("NM_DEVICE_STATE_REASON_CONFIG_FAILED", "4"),
    ("NM_DEVICE_STATE_REASON_CONNECTION_ASSUMED", "41"),
    ("NM_DEVICE_STATE_REASON_CONNECTION_REMOVED", "38"),
    ("NM_DEVICE_STATE_REASON_DCB_FCOE_FAILED", "55"),
    ("NM_DEVICE_STATE_REASON_DEPENDENCY_FAILED", "50"),
    ("NM_DEVICE_STATE_REASON_DHCP_ERROR", "16"),
    ("NM_DEVICE_STATE_REASON_DHCP_FAILED", "17"),
    ("NM_DEVICE_STATE_REASON_DHCP_START_FAILED", "15"),
    ("NM_DEVICE_STATE_REASON_FIRMWARE_MISSING", "35"),
    ("NM_DEVICE_STATE_REASON_GSM_APN_FAILED", "29"),
    ("NM_DEVICE_STATE_REASON_GSM_PIN_CHECK_FAILED", "34"),
    ("NM_DEVICE_STATE_REASON_GSM_REGISTRATION_DENIED", "31"),
    ("NM_DEVICE_STATE_REASON_GSM_REGISTRATION_FAILED", "33"),
    ("NM_DEVICE_STATE_REASON_GSM_REGISTRATION_NOT_SEARCHING", "30"),
    ("NM_DEVICE_STATE_REASON_GSM_REGISTRATION_TIMEOUT", "32"),
    ("NM_DEVICE_STATE_REASON_GSM_SIM_NOT_INSERTED", "45"),
    ("NM_DEVICE_STATE_REASON_GSM_SIM_PIN_REQUIRED", "46"),
    ("NM_DEVICE_STATE_REASON_GSM_SIM_PUK_REQUIRED", "47"),
    ("NM_DEVICE_STATE_REASON_GSM_SIM_WRONG", "48"),
    ("NM_DEVICE_STATE_REASON_INFINIBAND_MODE", "49"),
    ("NM_DEVICE_STATE_REASON_IP_CONFIG_EXPIRED", "6"),
    ("NM_DEVICE_STATE_REASON_IP_CONFIG_UNAVAILABLE", "5"),
    ("NM_DEVICE_STATE_REASON_MODEM_AVAILABLE", "58"),
    ("NM_DEVICE_STATE_REASON_MODEM_BUSY", "23"),
    ("NM_DEVICE_STATE_REASON_MODEM_DIAL_FAILED", "27"),
    ("NM_DEVICE_STATE_REASON_MODEM_DIAL_TIMEOUT", "26"),
    ("NM_DEVICE_STATE_REASON_MODEM_FAILED", "57"),
    ("NM_DEVICE_STATE_REASON_MODEM_INIT_FAILED", "28"),
    ("NM_DEVICE_STATE_REASON_MODEM_MANAGER_UNAVAILABLE", "52"),
    ("NM_DEVICE_STATE_REASON_MODEM_NOT_FOUND", "43"),
    ("NM_DEVICE_STATE_REASON_MODEM_NO_CARRIER", "25"),
    ("NM_DEVICE_STATE_REASON_MODEM_NO_DIAL_TONE", "24"),
    ("NM_DEVICE_STATE_REASON_NEW_ACTIVATION", "60"),
    ("NM_DEVICE_STATE_REASON_NONE", "0"),
    ("NM_DEVICE_STATE_REASON_NOW_MANAGED", "2"),
    ("NM_DEVICE_STATE_REASON_NOW_UNMANAGED", "3"),
    ("NM_DEVICE_STATE_REASON_NO_SECRETS", "7"),
    ("NM_DEVICE_STATE_REASON_PARENT_CHANGED", "61"),
    ("NM_DEVICE_STATE_REASON_PARENT_MANAGED_CHANGED", "62"),
    ("NM_DEVICE_STATE_REASON_PPP_DISCONNECT", "13"),
    ("NM_DEVICE_STATE_REASON_PPP_FAILED", "14"),
    ("NM_DEVICE_STATE_REASON_PPP_START_FAILED", "12"),
    ("NM_DEVICE_STATE_REASON_REMOVED", "36"),
    ("NM_DEVICE_STATE_REASON_SECONDARY_CONNECTION_FAILED", "54"),
    ("NM_DEVICE_STATE_REASON_SHARED_FAILED", "19"),
    ("NM_DEVICE_STATE_REASON_SHARED_START_FAILED", "18"),
    ("NM_DEVICE_STATE_REASON_SIM_PIN_INCORRECT", "59"),
    ("NM_DEVICE_STATE_REASON_SLEEPING", "37"),
    ("NM_DEVICE_STATE_REASON_SSID_NOT_FOUND", "53"),
    ("NM_DEVICE_STATE_REASON_SUPPLICANT_AVAILABLE", "42"),
    ("NM_DEVICE_STATE_REASON_SUPPLICANT_CONFIG_FAILED", "9"),
    ("NM_DEVICE_STATE_REASON_SUPPLICANT_DISCONNECT", "8"),
    ("NM_DEVICE_STATE_REASON_SUPPLICANT_FAILED", "10"),
    ("NM_DEVICE_STATE_REASON_SUPPLICANT_TIMEOUT", "11"),
    ("NM_DEVICE_STATE_REASON_TEAMD_CONTROL_FAILED", "56"),
    ("NM_DEVICE_STATE_REASON_UNKNOWN", "1"),
    ("NM_DEVICE_STATE_REASON_USER_REQUESTED", "39"),
    ("NM_DEVICE_STATE_SECONDARIES", "90"),
    ("NM_DEVICE_STATE_UNAVAILABLE", "20"),
    ("NM_DEVICE_STATE_UNKNOWN", "0"),
    ("NM_DEVICE_STATE_UNMANAGED", "10"),
    ("NM_DEVICE_TEAM_CARRIER", "carrier"),
    ("NM_DEVICE_TEAM_CONFIG", "config"),
    ("NM_DEVICE_TEAM_HW_ADDRESS", "hw-address"),
    ("NM_DEVICE_TEAM_SLAVES", "slaves"),
    ("NM_DEVICE_TUN_GROUP", "group"),
    ("NM_DEVICE_TUN_HW_ADDRESS", "hw-address"),
    ("NM_DEVICE_TUN_MODE", "mode"),
    ("NM_DEVICE_TUN_MULTI_QUEUE", "multi-queue"),
    ("NM_DEVICE_TUN_NO_PI", "no-pi"),
    ("NM_DEVICE_TUN_OWNER", "owner"),
    ("NM_DEVICE_TUN_VNET_HDR", "vnet-hdr"),
    ("NM_DEVICE_TYPE_ADSL", "12"),
    ("NM_DEVICE_TYPE_BOND", "10"),
    ("NM_DEVICE_TYPE_BRIDGE", "13"),
    ("NM_DEVICE_TYPE_BT", "5"),
    ("NM_DEVICE_TYPE_DUMMY", "22"),
    ("NM_DEVICE_TYPE_ETHERNET", "1"),
    ("NM_DEVICE_TYPE_GENERIC", "14"),
    ("NM_DEVICE_TYPE_INFINIBAND", "9"),
    ("NM_DEVICE_TYPE_IP_TUNNEL", "17"),
    ("NM_DEVICE_TYPE_MACSEC", "21"),
    ("NM_DEVICE_TYPE_MACVLAN", "18"),
    ("NM_DEVICE_TYPE_MODEM", "8"),
    ("NM_DEVICE_TYPE_OLPC_MESH", "6"),
    ("NM_DEVICE_TYPE_TEAM", "15"),
    ("NM_DEVICE_TYPE_TUN", "16"),
    ("NM_DEVICE_TYPE_UNKNOWN", "0"),
    ("NM_DEVICE_TYPE_UNUSED1", "3"),
    ("NM_DEVICE_TYPE_UNUSED2", "4"),
    ("NM_DEVICE_TYPE_VETH", "20"),
    ("NM_DEVICE_TYPE_VLAN", "11"),
    ("NM_DEVICE_TYPE_VXLAN", "19"),
    ("NM_DEVICE_TYPE_WIFI", "2"),
    ("NM_DEVICE_TYPE_WIMAX", "7"),
    ("NM_DEVICE_UDI", "udi"),
    ("NM_DEVICE_VENDOR", "vendor"),
    ("NM_DEVICE_VLAN_CARRIER", "carrier"),
    ("NM_DEVICE_VLAN_HW_ADDRESS", "hw-address"),
    ("NM_DEVICE_VLAN_PARENT", "parent"),
    ("NM_DEVICE_VLAN_VLAN_ID", "vlan-id"),
    ("NM_DEVICE_VXLAN_AGEING", "ageing"),
    ("NM_DEVICE_VXLAN_CARRIER", "carrier"),
    ("NM_DEVICE_VXLAN_DST_PORT", "dst-port"),
    ("NM_DEVICE_VXLAN_GROUP", "group"),
    ("NM_DEVICE_VXLAN_HW_ADDRESS", "hw-address"),
    ("NM_DEVICE_VXLAN_ID", "id"),
    ("NM_DEVICE_VXLAN_L2MISS", "l2miss"),
    ("NM_DEVICE_VXLAN_L3MISS", "l3miss"),
    ("NM_DEVICE_VXLAN_LEARNING", "learning"),
    ("NM_DEVICE_VXLAN_LIMIT", "limit"),
    ("NM_DEVICE_VXLAN_LOCAL", "local"),
    ("NM_DEVICE_VXLAN_PARENT", "parent"),
    ("NM_DEVICE_VXLAN_PROXY", "proxy"),
    ("NM_DEVICE_VXLAN_RSC", "rsc"),
    ("NM_DEVICE_VXLAN_SRC_PORT_MAX", "src-port-max"),
    ("NM_DEVICE_VXLAN_SRC_PORT_MIN", "src-port-min"),
    ("NM_DEVICE_VXLAN_TOS", "tos"),
    ("NM_DEVICE_VXLAN_TTL", "ttl"),
    ("NM_DEVICE_WIFI_ACCESS_POINTS", "access-points"),
    ("NM_DEVICE_WIFI_ACTIVE_ACCESS_POINT", "active-access-point"),
    ("NM_DEVICE_WIFI_BITRATE", "bitrate"),
    ("NM_DEVICE_WIFI_CAPABILITIES", "wireless-capabilities"),
    ("NM_DEVICE_WIFI_HW_ADDRESS", "hw-address"),
    ("NM_DEVICE_WIFI_MODE", "mode"),
    ("NM_DEVICE_WIFI_PERMANENT_HW_ADDRESS", "perm-hw-address"),
    ("NM_DEVICE_WIMAX_ACTIVE_NSP", "active-nsp"),
    ("NM_DEVICE_WIMAX_BSID", "bsid"),
    ("NM_DEVICE_WIMAX_CENTER_FREQUENCY", "center-frequency"),
    ("NM_DEVICE_WIMAX_CINR", "cinr"),
    ("NM_DEVICE_WIMAX_HW_ADDRESS", "hw-address"),
    ("NM_DEVICE_WIMAX_NSPS", "nsps"),
    ("NM_DEVICE_WIMAX_RSSI", "rssi"),
    ("NM_DEVICE_WIMAX_TX_POWER", "tx-power"),
    ("NM_DHCP_CONFIG_FAMILY", "family"),
    ("NM_DHCP_CONFIG_OPTIONS", "options"),
    ("NM_IP_CONFIG_ADDRESSES", "addresses"),
    ("NM_IP_CONFIG_DOMAINS", "domains"),
    ("NM_IP_CONFIG_FAMILY", "family"),
    ("NM_IP_CONFIG_GATEWAY", "gateway"),
    ("NM_IP_CONFIG_NAMESERVERS", "nameservers"),
    ("NM_IP_CONFIG_ROUTES", "routes"),
    ("NM_IP_CONFIG_SEARCHES", "searches"),
    ("NM_IP_CONFIG_WINS_SERVERS", "wins-servers"),
    ("NM_IP_ROUTE_ATTRIBUTE_CWND", "cwnd"),
    ("NM_IP_ROUTE_ATTRIBUTE_FROM", "from"),
    ("NM_IP_ROUTE_ATTRIBUTE_INITCWND", "initcwnd"),
    ("NM_IP_ROUTE_ATTRIBUTE_INITRWND", "initrwnd"),
    ("NM_IP_ROUTE_ATTRIBUTE_LOCK_CWND", "lock-cwnd"),
    ("NM_IP_ROUTE_ATTRIBUTE_LOCK_INITCWND", "lock-initcwnd"),
    ("NM_IP_ROUTE_ATTRIBUTE_LOCK_INITRWND", "lock-initrwnd"),
    ("NM_IP_ROUTE_ATTRIBUTE_LOCK_MTU", "lock-mtu"),
    ("NM_IP_ROUTE_ATTRIBUTE_LOCK_WINDOW", "lock-window"),
    ("NM_IP_ROUTE_ATTRIBUTE_MTU", "mtu"),
    ("NM_IP_ROUTE_ATTRIBUTE_SRC", "src"),
    ("NM_IP_ROUTE_ATTRIBUTE_TOS", "tos"),
    ("NM_IP_ROUTE_ATTRIBUTE_WINDOW", "window"),
    ("NM_IP_TUNNEL_MODE_GRE", "2"),
    ("NM_IP_TUNNEL_MODE_IP6GRE", "8"),
    ("NM_IP_TUNNEL_MODE_IP6IP6", "6"),
    ("NM_IP_TUNNEL_MODE_IPIP", "1"),
    ("NM_IP_TUNNEL_MODE_IPIP6", "7"),
    ("NM_IP_TUNNEL_MODE_ISATAP", "4"),
    ("NM_IP_TUNNEL_MODE_SIT", "3"),
    ("NM_IP_TUNNEL_MODE_UNKNOWN", "0"),
    ("NM_IP_TUNNEL_MODE_VTI", "5"),
    ("NM_IP_TUNNEL_MODE_VTI6", "9"),
    ("NM_LLDP_ATTR_CHASSIS_ID", "chassis-id"),
    ("NM_LLDP_ATTR_CHASSIS_ID_TYPE", "chassis-id-type"),
    ("NM_LLDP_ATTR_DESTINATION", "destination"),
    ("NM_LLDP_ATTR_IEEE_802_1_PPVID", "ieee-802-1-ppvid"),
    ("NM_LLDP_ATTR_IEEE_802_1_PPVID_FLAGS", "ieee-802-1-ppvid-flags"),
    ("NM_LLDP_ATTR_IEEE_802_1_PVID", "ieee-802-1-pvid"),
    ("NM_LLDP_ATTR_IEEE_802_1_VID", "ieee-802-1-vid"),
    ("NM_LLDP_ATTR_IEEE_802_1_VLAN_NAME", "ieee-802-1-vlan-name"),
    ("NM_LLDP_ATTR_PORT_DESCRIPTION", "port-description"),
    ("NM_LLDP_ATTR_PORT_ID", "port-id"),
    ("NM_LLDP_ATTR_PORT_ID_TYPE", "port-id-type"),
    ("NM_LLDP_ATTR_SYSTEM_CAPABILITIES", "system-capabilities"),
    ("NM_LLDP_ATTR_SYSTEM_DESCRIPTION", "system-description"),
    ("NM_LLDP_ATTR_SYSTEM_NAME", "system-name"),
    ("NM_LLDP_DEST_NEAREST_BRIDGE", "nearest-bridge"),
    ("NM_LLDP_DEST_NEAREST_CUSTOMER_BRIDGE", "nearest-customer-bridge"),
    ("NM_LLDP_DEST_NEAREST_NON_TPMR_BRIDGE", "nearest-non-tpmr-bridge"),
    ("NM_MAJOR_VERSION", "1"),
    ("NM_MANAGER_ERROR_ALREADY_ASLEEP_OR_AWAKE", "8"),
    ("NM_MANAGER_ERROR_ALREADY_ENABLED_OR_DISABLED", "9"),
    ("NM_MANAGER_ERROR_CONNECTION_ALREADY_ACTIVE", "6"),
    ("NM_MANAGER_ERROR_CONNECTION_NOT_ACTIVE", "5"),
    ("NM_MANAGER_ERROR_CONNECTION_NOT_AVAILABLE", "4"),
    ("NM_MANAGER_ERROR_DEPENDENCY_FAILED", "7"),
    ("NM_MANAGER_ERROR_FAILED", "0"),
    ("NM_MANAGER_ERROR_INVALID_ARGUMENTS", "12"),
    ("NM_MANAGER_ERROR_MISSING_PLUGIN", "13"),
    ("NM_MANAGER_ERROR_PERMISSION_DENIED", "1"),
    ("NM_MANAGER_ERROR_UNKNOWN_CONNECTION", "2"),
    ("NM_MANAGER_ERROR_UNKNOWN_DEVICE", "3"),
    ("NM_MANAGER_ERROR_UNKNOWN_LOG_DOMAIN", "11"),
    ("NM_MANAGER_ERROR_UNKNOWN_LOG_LEVEL", "10"),
    ("NM_METERED_GUESS_NO", "4"),
    ("NM_METERED_GUESS_YES", "3"),
    ("NM_METERED_NO", "2"),
    ("NM_METERED_UNKNOWN", "0"),
    ("NM_METERED_YES", "1"),
    ("NM_MICRO_VERSION", "6"),
    ("NM_MINOR_VERSION", "8"),
    ("NM_OBJECT_DBUS_CONNECTION", "dbus-connection"),
    ("NM_OBJECT_DBUS_OBJECT", "dbus-object"),
    ("NM_OBJECT_DBUS_OBJECT_MANAGER", "dbus-object-manager"),
    ("NM_OBJECT_PATH", "path"),
    ("NM_REMOTE_CONNECTION_DBUS_CONNECTION", "dbus-connection"),
    ("NM_REMOTE_CONNECTION_PATH", "path"),
    ("NM_REMOTE_CONNECTION_UNSAVED", "unsaved"),
    ("NM_REMOTE_CONNECTION_VISIBLE", "visible"),
    ("NM_ROLLBACK_RESULT_ERR_DEVICE_UNMANAGED", "2"),
    ("NM_ROLLBACK_RESULT_ERR_FAILED", "3"),
    ("NM_ROLLBACK_RESULT_ERR_NO_DEVICE", "1"),
    ("NM_ROLLBACK_RESULT_OK", "0"),
    ("NM_SECRET_AGENT_CAPABILITY_LAST", "1"),
    ("NM_SECRET_AGENT_CAPABILITY_NONE", "0"),
    ("NM_SECRET_AGENT_CAPABILITY_VPN_HINTS", "1"),
    ("NM_SECRET_AGENT_ERROR_AGENT_CANCELED", "4"),
    ("NM_SECRET_AGENT_ERROR_FAILED", "0"),
    ("NM_SECRET_AGENT_ERROR_INVALID_CONNECTION", "2"),
    ("NM_SECRET_AGENT_ERROR_NO_SECRETS", "5"),
    ("NM_SECRET_AGENT_ERROR_PERMISSION_DENIED", "1"),
    ("NM_SECRET_AGENT_ERROR_USER_CANCELED", "3"),
    ("NM_SECRET_AGENT_GET_SECRETS_FLAG_ALLOW_INTERACTION", "1"),
    ("NM_SECRET_AGENT_GET_SECRETS_FLAG_NONE", "0"),
    ("NM_SECRET_AGENT_GET_SECRETS_FLAG_NO_ERRORS", "1073741824"),
    ("NM_SECRET_AGENT_GET_SECRETS_FLAG_ONLY_SYSTEM", "2147483648"),
    ("NM_SECRET_AGENT_GET_SECRETS_FLAG_REQUEST_NEW", "2"),
    ("NM_SECRET_AGENT_GET_SECRETS_FLAG_USER_REQUESTED", "4"),
    ("NM_SECRET_AGENT_OLD_AUTO_REGISTER", "auto-register"),
    ("NM_SECRET_AGENT_OLD_CAPABILITIES", "capabilities"),
    ("NM_SECRET_AGENT_OLD_IDENTIFIER", "identifier"),
    ("NM_SECRET_AGENT_OLD_REGISTERED", "registered"),
    ("NM_SETTINGS_ERROR_FAILED", "0"),
    ("NM_SETTINGS_ERROR_INVALID_CONNECTION", "3"),
    ("NM_SETTINGS_ERROR_INVALID_HOSTNAME", "6"),
    ("NM_SETTINGS_ERROR_NOT_SUPPORTED", "2"),
    ("NM_SETTINGS_ERROR_PERMISSION_DENIED", "1"),
    ("NM_SETTINGS_ERROR_READ_ONLY_CONNECTION", "4"),
    ("NM_SETTINGS_ERROR_UUID_EXISTS", "5"),
    ("NM_SETTING_802_1X_ALTSUBJECT_MATCHES", "altsubject-matches"),
    ("NM_SETTING_802_1X_ANONYMOUS_IDENTITY", "anonymous-identity"),
    ("NM_SETTING_802_1X_AUTH_FLAGS_ALL", "7"),
    ("NM_SETTING_802_1X_AUTH_FLAGS_NONE", "0"),
    ("NM_SETTING_802_1X_AUTH_FLAGS_TLS_1_0_DISABLE", "1"),
    ("NM_SETTING_802_1X_AUTH_FLAGS_TLS_1_1_DISABLE", "2"),
    ("NM_SETTING_802_1X_AUTH_FLAGS_TLS_1_2_DISABLE", "4"),
    ("NM_SETTING_802_1X_AUTH_TIMEOUT", "auth-timeout"),
    ("NM_SETTING_802_1X_CA_CERT", "ca-cert"),
    ("NM_SETTING_802_1X_CA_CERT_PASSWORD", "ca-cert-password"),
    ("NM_SETTING_802_1X_CA_CERT_PASSWORD_FLAGS", "ca-cert-password-flags"),
    ("NM_SETTING_802_1X_CA_PATH", "ca-path"),
    ("NM_SETTING_802_1X_CERT_SCHEME_PREFIX_PATH", "file://"),
    ("NM_SETTING_802_1X_CERT_SCHEME_PREFIX_PKCS11", "pkcs11:"),
    ("NM_SETTING_802_1X_CK_FORMAT_PKCS12", "3"),
    ("NM_SETTING_802_1X_CK_FORMAT_RAW_KEY", "2"),
    ("NM_SETTING_802_1X_CK_FORMAT_UNKNOWN", "0"),
    ("NM_SETTING_802_1X_CK_FORMAT_X509", "1"),
    ("NM_SETTING_802_1X_CK_SCHEME_BLOB", "1"),
    ("NM_SETTING_802_1X_CK_SCHEME_PATH", "2"),
    ("NM_SETTING_802_1X_CK_SCHEME_PKCS11", "3"),
    ("NM_SETTING_802_1X_CK_SCHEME_UNKNOWN", "0"),
    ("NM_SETTING_802_1X_CLIENT_CERT", "client-cert"),
    ("NM_SETTING_802_1X_CLIENT_CERT_PASSWORD", "client-cert-password"),
    ("NM_SETTING_802_1X_CLIENT_CERT_PASSWORD_FLAGS", "client-cert-password-flags"),
    ("NM_SETTING_802_1X_DOMAIN_SUFFIX_MATCH", "domain-suffix-match"),
    ("NM_SETTING_802_1X_EAP", "eap"),
    ("NM_SETTING_802_1X_IDENTITY", "identity"),
    ("NM_SETTING_802_1X_PAC_FILE", "pac-file"),
    ("NM_SETTING_802_1X_PASSWORD", "password"),
    ("NM_SETTING_802_1X_PASSWORD_FLAGS", "password-flags"),
    ("NM_SETTING_802_1X_PASSWORD_RAW", "password-raw"),
    ("NM_SETTING_802_1X_PASSWORD_RAW_FLAGS", "password-raw-flags"),
    ("NM_SETTING_802_1X_PHASE1_AUTH_FLAGS", "phase1-auth-flags"),
    ("NM_SETTING_802_1X_PHASE1_FAST_PROVISIONING", "phase1-fast-provisioning"),
    ("NM_SETTING_802_1X_PHASE1_PEAPLABEL", "phase1-peaplabel"),
    ("NM_SETTING_802_1X_PHASE1_PEAPVER", "phase1-peapver"),
    ("NM_SETTING_802_1X_PHASE2_ALTSUBJECT_MATCHES", "phase2-altsubject-matches"),
    ("NM_SETTING_802_1X_PHASE2_AUTH", "phase2-auth"),
    ("NM_SETTING_802_1X_PHASE2_AUTHEAP", "phase2-autheap"),
    ("NM_SETTING_802_1X_PHASE2_CA_CERT", "phase2-ca-cert"),
    ("NM_SETTING_802_1X_PHASE2_CA_CERT_PASSWORD", "phase2-ca-cert-password"),
    ("NM_SETTING_802_1X_PHASE2_CA_CERT_PASSWORD_FLAGS", "phase2-ca-cert-password-flags"),
    ("NM_SETTING_802_1X_PHASE2_CA_PATH", "phase2-ca-path"),
    ("NM_SETTING_802_1X_PHASE2_CLIENT_CERT", "phase2-client-cert"),
    ("NM_SETTING_802_1X_PHASE2_CLIENT_CERT_PASSWORD", "phase2-client-cert-password"),
    ("NM_SETTING_802_1X_PHASE2_CLIENT_CERT_PASSWORD_FLAGS", "phase2-client-cert-password-flags"),
    ("NM_SETTING_802_1X_PHASE2_DOMAIN_SUFFIX_MATCH", "phase2-domain-suffix-match"),
    ("NM_SETTING_802_1X_PHASE2_PRIVATE_KEY", "phase2-private-key"),
    ("NM_SETTING_802_1X_PHASE2_PRIVATE_KEY_PASSWORD", "phase2-private-key-password"),
    ("NM_SETTING_802_1X_PHASE2_PRIVATE_KEY_PASSWORD_FLAGS", "phase2-private-key-password-flags"),
    ("NM_SETTING_802_1X_PHASE2_SUBJECT_MATCH", "phase2-subject-match"),
    ("NM_SETTING_802_1X_PIN", "pin"),
    ("NM_SETTING_802_1X_PIN_FLAGS", "pin-flags"),
    ("NM_SETTING_802_1X_PRIVATE_KEY", "private-key"),
    ("NM_SETTING_802_1X_PRIVATE_KEY_PASSWORD", "private-key-password"),
    ("NM_SETTING_802_1X_PRIVATE_KEY_PASSWORD_FLAGS", "private-key-password-flags"),
    ("NM_SETTING_802_1X_SETTING_NAME", "802-1x"),
    ("NM_SETTING_802_1X_SUBJECT_MATCH", "subject-match"),
    ("NM_SETTING_802_1X_SYSTEM_CA_CERTS", "system-ca-certs"),
    ("NM_SETTING_ADSL_ENCAPSULATION", "encapsulation"),
    ("NM_SETTING_ADSL_ENCAPSULATION_LLC", "llc"),
    ("NM_SETTING_ADSL_ENCAPSULATION_VCMUX", "vcmux"),
    ("NM_SETTING_ADSL_PASSWORD", "password"),
    ("NM_SETTING_ADSL_PASSWORD_FLAGS", "password-flags"),
    ("NM_SETTING_ADSL_PROTOCOL", "protocol"),
    ("NM_SETTING_ADSL_PROTOCOL_IPOATM", "ipoatm"),
    ("NM_SETTING_ADSL_PROTOCOL_PPPOA", "pppoa"),
    ("NM_SETTING_ADSL_PROTOCOL_PPPOE", "pppoe"),
    ("NM_SETTING_ADSL_SETTING_NAME", "adsl"),
    ("NM_SETTING_ADSL_USERNAME", "username"),
    ("NM_SETTING_ADSL_VCI", "vci"),
    ("NM_SETTING_ADSL_VPI", "vpi"),
    ("NM_SETTING_BLUETOOTH_BDADDR", "bdaddr"),
    ("NM_SETTING_BLUETOOTH_SETTING_NAME", "bluetooth"),
    ("NM_SETTING_BLUETOOTH_TYPE", "type"),
    ("NM_SETTING_BLUETOOTH_TYPE_DUN", "dun"),
    ("NM_SETTING_BLUETOOTH_TYPE_PANU", "panu"),
    ("NM_SETTING_BOND_OPTIONS", "options"),
    ("NM_SETTING_BOND_OPTION_ACTIVE_SLAVE", "active_slave"),
    ("NM_SETTING_BOND_OPTION_AD_ACTOR_SYSTEM", "ad_actor_system"),
    ("NM_SETTING_BOND_OPTION_AD_ACTOR_SYS_PRIO", "ad_actor_sys_prio"),
    ("NM_SETTING_BOND_OPTION_AD_SELECT", "ad_select"),
    ("NM_SETTING_BOND_OPTION_AD_USER_PORT_KEY", "ad_user_port_key"),
    ("NM_SETTING_BOND_OPTION_ALL_SLAVES_ACTIVE", "all_slaves_active"),
    ("NM_SETTING_BOND_OPTION_ARP_ALL_TARGETS", "arp_all_targets"),
    ("NM_SETTING_BOND_OPTION_ARP_INTERVAL", "arp_interval"),
    ("NM_SETTING_BOND_OPTION_ARP_IP_TARGET", "arp_ip_target"),
    ("NM_SETTING_BOND_OPTION_ARP_VALIDATE", "arp_validate"),
    ("NM_SETTING_BOND_OPTION_DOWNDELAY", "downdelay"),
    ("NM_SETTING_BOND_OPTION_FAIL_OVER_MAC", "fail_over_mac"),
    ("NM_SETTING_BOND_OPTION_LACP_RATE", "lacp_rate"),
    ("NM_SETTING_BOND_OPTION_LP_INTERVAL", "lp_interval"),
    ("NM_SETTING_BOND_OPTION_MIIMON", "miimon"),
    ("NM_SETTING_BOND_OPTION_MIN_LINKS", "min_links"),
    ("NM_SETTING_BOND_OPTION_MODE", "mode"),
    ("NM_SETTING_BOND_OPTION_NUM_GRAT_ARP", "num_grat_arp"),
    ("NM_SETTING_BOND_OPTION_NUM_UNSOL_NA", "num_unsol_na"),
    ("NM_SETTING_BOND_OPTION_PACKETS_PER_SLAVE", "packets_per_slave"),
    ("NM_SETTING_BOND_OPTION_PRIMARY", "primary"),
    ("NM_SETTING_BOND_OPTION_PRIMARY_RESELECT", "primary_reselect"),
    ("NM_SETTING_BOND_OPTION_RESEND_IGMP", "resend_igmp"),
    ("NM_SETTING_BOND_OPTION_TLB_DYNAMIC_LB", "tlb_dynamic_lb"),
    ("NM_SETTING_BOND_OPTION_UPDELAY", "updelay"),
    ("NM_SETTING_BOND_OPTION_USE_CARRIER", "use_carrier"),
    ("NM_SETTING_BOND_OPTION_XMIT_HASH_POLICY", "xmit_hash_policy"),
    ("NM_SETTING_BOND_SETTING_NAME", "bond"),
    ("NM_SETTING_BRIDGE_AGEING_TIME", "ageing-time"),
    ("NM_SETTING_BRIDGE_FORWARD_DELAY", "forward-delay"),
    ("NM_SETTING_BRIDGE_HELLO_TIME", "hello-time"),
    ("NM_SETTING_BRIDGE_MAC_ADDRESS", "mac-address"),
    ("NM_SETTING_BRIDGE_MAX_AGE", "max-age"),
    ("NM_SETTING_BRIDGE_MULTICAST_SNOOPING", "multicast-snooping"),
    ("NM_SETTING_BRIDGE_PORT_HAIRPIN_MODE", "hairpin-mode"),
    ("NM_SETTING_BRIDGE_PORT_PATH_COST", "path-cost"),
    ("NM_SETTING_BRIDGE_PORT_PRIORITY", "priority"),
    ("NM_SETTING_BRIDGE_PORT_SETTING_NAME", "bridge-port"),
    ("NM_SETTING_BRIDGE_PRIORITY", "priority"),
    ("NM_SETTING_BRIDGE_SETTING_NAME", "bridge"),
    ("NM_SETTING_BRIDGE_STP", "stp"),
    ("NM_SETTING_CDMA_MTU", "mtu"),
    ("NM_SETTING_CDMA_NUMBER", "number"),
    ("NM_SETTING_CDMA_PASSWORD", "password"),
    ("NM_SETTING_CDMA_PASSWORD_FLAGS", "password-flags"),
    ("NM_SETTING_CDMA_SETTING_NAME", "cdma"),
    ("NM_SETTING_CDMA_USERNAME", "username"),
    ("NM_SETTING_COMPARE_FLAG_DIFF_RESULT_NO_DEFAULT", "64"),
    ("NM_SETTING_COMPARE_FLAG_DIFF_RESULT_WITH_DEFAULT", "32"),
    ("NM_SETTING_COMPARE_FLAG_EXACT", "0"),
    ("NM_SETTING_COMPARE_FLAG_FUZZY", "1"),
    ("NM_SETTING_COMPARE_FLAG_IGNORE_AGENT_OWNED_SECRETS", "8"),
    ("NM_SETTING_COMPARE_FLAG_IGNORE_ID", "2"),
    ("NM_SETTING_COMPARE_FLAG_IGNORE_NOT_SAVED_SECRETS", "16"),
    ("NM_SETTING_COMPARE_FLAG_IGNORE_SECRETS", "4"),
    ("NM_SETTING_COMPARE_FLAG_IGNORE_TIMESTAMP", "128"),
    ("NM_SETTING_CONNECTION_AUTOCONNECT", "autoconnect"),
    ("NM_SETTING_CONNECTION_AUTOCONNECT_PRIORITY", "autoconnect-priority"),
    ("NM_SETTING_CONNECTION_AUTOCONNECT_PRIORITY_DEFAULT", "0"),
    ("NM_SETTING_CONNECTION_AUTOCONNECT_PRIORITY_MAX", "999"),
    ("NM_SETTING_CONNECTION_AUTOCONNECT_PRIORITY_MIN", "-999"),
    ("NM_SETTING_CONNECTION_AUTOCONNECT_RETRIES", "autoconnect-retries"),
    ("NM_SETTING_CONNECTION_AUTOCONNECT_SLAVES", "autoconnect-slaves"),
    ("NM_SETTING_CONNECTION_AUTOCONNECT_SLAVES_DEFAULT", "-1"),
    ("NM_SETTING_CONNECTION_AUTOCONNECT_SLAVES_NO", "0"),
    ("NM_SETTING_CONNECTION_AUTOCONNECT_SLAVES_YES", "1"),
    ("NM_SETTING_CONNECTION_GATEWAY_PING_TIMEOUT", "gateway-ping-timeout"),
    ("NM_SETTING_CONNECTION_ID", "id"),
    ("NM_SETTING_CONNECTION_INTERFACE_NAME", "interface-name"),
    ("NM_SETTING_CONNECTION_LLDP", "lldp"),
    ("NM_SETTING_CONNECTION_LLDP_DEFAULT", "-1"),
    ("NM_SETTING_CONNECTION_LLDP_DISABLE", "0"),
    ("NM_SETTING_CONNECTION_LLDP_ENABLE_RX", "1"),
    ("NM_SETTING_CONNECTION_MASTER", "master"),
    ("NM_SETTING_CONNECTION_METERED", "metered"),
    ("NM_SETTING_CONNECTION_PERMISSIONS", "permissions"),
    ("NM_SETTING_CONNECTION_READ_ONLY", "read-only"),
    ("NM_SETTING_CONNECTION_SECONDARIES", "secondaries"),
    ("NM_SETTING_CONNECTION_SETTING_NAME", "connection"),
    ("NM_SETTING_CONNECTION_SLAVE_TYPE", "slave-type"),
    ("NM_SETTING_CONNECTION_STABLE_ID", "stable-id"),
    ("NM_SETTING_CONNECTION_TIMESTAMP", "timestamp"),
    ("NM_SETTING_CONNECTION_TYPE", "type"),
    ("NM_SETTING_CONNECTION_UUID", "uuid"),
    ("NM_SETTING_CONNECTION_ZONE", "zone"),
    ("NM_SETTING_DCB_APP_FCOE_FLAGS", "app-fcoe-flags"),
    ("NM_SETTING_DCB_APP_FCOE_MODE", "app-fcoe-mode"),
    ("NM_SETTING_DCB_APP_FCOE_PRIORITY", "app-fcoe-priority"),
    ("NM_SETTING_DCB_APP_FIP_FLAGS", "app-fip-flags"),
    ("NM_SETTING_DCB_APP_FIP_PRIORITY", "app-fip-priority"),
    ("NM_SETTING_DCB_APP_ISCSI_FLAGS", "app-iscsi-flags"),
    ("NM_SETTING_DCB_APP_ISCSI_PRIORITY", "app-iscsi-priority"),
    ("NM_SETTING_DCB_FCOE_MODE_FABRIC", "fabric"),
    ("NM_SETTING_DCB_FCOE_MODE_VN2VN", "vn2vn"),
    ("NM_SETTING_DCB_FLAG_ADVERTISE", "2"),
    ("NM_SETTING_DCB_FLAG_ENABLE", "1"),
    ("NM_SETTING_DCB_FLAG_NONE", "0"),
    ("NM_SETTING_DCB_FLAG_WILLING", "4"),
    ("NM_SETTING_DCB_PRIORITY_BANDWIDTH", "priority-bandwidth"),
    ("NM_SETTING_DCB_PRIORITY_FLOW_CONTROL", "priority-flow-control"),
    ("NM_SETTING_DCB_PRIORITY_FLOW_CONTROL_FLAGS", "priority-flow-control-flags"),
    ("NM_SETTING_DCB_PRIORITY_GROUP_BANDWIDTH", "priority-group-bandwidth"),
    ("NM_SETTING_DCB_PRIORITY_GROUP_FLAGS", "priority-group-flags"),
    ("NM_SETTING_DCB_PRIORITY_GROUP_ID", "priority-group-id"),
    ("NM_SETTING_DCB_PRIORITY_STRICT_BANDWIDTH", "priority-strict-bandwidth"),
    ("NM_SETTING_DCB_PRIORITY_TRAFFIC_CLASS", "priority-traffic-class"),
    ("NM_SETTING_DCB_SETTING_NAME", "dcb"),
    ("NM_SETTING_DIFF_RESULT_IN_A", "1"),
    ("NM_SETTING_DIFF_RESULT_IN_A_DEFAULT", "4"),
    ("NM_SETTING_DIFF_RESULT_IN_B", "2"),
    ("NM_SETTING_DIFF_RESULT_IN_B_DEFAULT", "4"),
    ("NM_SETTING_DIFF_RESULT_UNKNOWN", "0"),
    ("NM_SETTING_DNS_OPTION_ATTEMPTS", "attempts"),
    ("NM_SETTING_DNS_OPTION_DEBUG", "debug"),
    ("NM_SETTING_DNS_OPTION_EDNS0", "edns0"),
    ("NM_SETTING_DNS_OPTION_INET6", "inet6"),
    ("NM_SETTING_DNS_OPTION_IP6_BYTESTRING", "ip6-bytestring"),
    ("NM_SETTING_DNS_OPTION_IP6_DOTINT", "ip6-dotint"),
    ("NM_SETTING_DNS_OPTION_NDOTS", "ndots"),
    ("NM_SETTING_DNS_OPTION_NO_CHECK_NAMES", "no-check-names"),
    ("NM_SETTING_DNS_OPTION_NO_IP6_DOTINT", "no-ip6-dotint"),
    ("NM_SETTING_DNS_OPTION_NO_TLD_QUERY", "no-tld-query"),
    ("NM_SETTING_DNS_OPTION_ROTATE", "rotate"),
    ("NM_SETTING_DNS_OPTION_SINGLE_REQUEST", "single-request"),
    ("NM_SETTING_DNS_OPTION_SINGLE_REQUEST_REOPEN", "single-request-reopen"),
    ("NM_SETTING_DNS_OPTION_TIMEOUT", "timeout"),
    ("NM_SETTING_DNS_OPTION_USE_VC", "use-vc"),
    ("NM_SETTING_DUMMY_SETTING_NAME", "dummy"),
    ("NM_SETTING_GENERIC_SETTING_NAME", "generic"),
    ("NM_SETTING_GSM_APN", "apn"),
    ("NM_SETTING_GSM_DEVICE_ID", "device-id"),
    ("NM_SETTING_GSM_HOME_ONLY", "home-only"),
    ("NM_SETTING_GSM_MTU", "mtu"),
    ("NM_SETTING_GSM_NETWORK_ID", "network-id"),
    ("NM_SETTING_GSM_NUMBER", "number"),
    ("NM_SETTING_GSM_PASSWORD", "password"),
    ("NM_SETTING_GSM_PASSWORD_FLAGS", "password-flags"),
    ("NM_SETTING_GSM_PIN", "pin"),
    ("NM_SETTING_GSM_PIN_FLAGS", "pin-flags"),
    ("NM_SETTING_GSM_SETTING_NAME", "gsm"),
    ("NM_SETTING_GSM_SIM_ID", "sim-id"),
    ("NM_SETTING_GSM_SIM_OPERATOR_ID", "sim-operator-id"),
    ("NM_SETTING_GSM_USERNAME", "username"),
    ("NM_SETTING_INFINIBAND_MAC_ADDRESS", "mac-address"),
    ("NM_SETTING_INFINIBAND_MTU", "mtu"),
    ("NM_SETTING_INFINIBAND_PARENT", "parent"),
    ("NM_SETTING_INFINIBAND_P_KEY", "p-key"),
    ("NM_SETTING_INFINIBAND_SETTING_NAME", "infiniband"),
    ("NM_SETTING_INFINIBAND_TRANSPORT_MODE", "transport-mode"),
    ("NM_SETTING_IP4_CONFIG_DHCP_CLIENT_ID", "dhcp-client-id"),
    ("NM_SETTING_IP4_CONFIG_DHCP_FQDN", "dhcp-fqdn"),
    ("NM_SETTING_IP4_CONFIG_METHOD_AUTO", "auto"),
    ("NM_SETTING_IP4_CONFIG_METHOD_DISABLED", "disabled"),
    ("NM_SETTING_IP4_CONFIG_METHOD_LINK_LOCAL", "link-local"),
    ("NM_SETTING_IP4_CONFIG_METHOD_MANUAL", "manual"),
    ("NM_SETTING_IP4_CONFIG_METHOD_SHARED", "shared"),
    ("NM_SETTING_IP4_CONFIG_SETTING_NAME", "ipv4"),
    ("NM_SETTING_IP6_CONFIG_ADDR_GEN_MODE", "addr-gen-mode"),
    ("NM_SETTING_IP6_CONFIG_ADDR_GEN_MODE_EUI64", "0"),
    ("NM_SETTING_IP6_CONFIG_ADDR_GEN_MODE_STABLE_PRIVACY", "1"),
    ("NM_SETTING_IP6_CONFIG_IP6_PRIVACY", "ip6-privacy"),
    ("NM_SETTING_IP6_CONFIG_METHOD_AUTO", "auto"),
    ("NM_SETTING_IP6_CONFIG_METHOD_DHCP", "dhcp"),
    ("NM_SETTING_IP6_CONFIG_METHOD_IGNORE", "ignore"),
    ("NM_SETTING_IP6_CONFIG_METHOD_LINK_LOCAL", "link-local"),
    ("NM_SETTING_IP6_CONFIG_METHOD_MANUAL", "manual"),
    ("NM_SETTING_IP6_CONFIG_METHOD_SHARED", "shared"),
    ("NM_SETTING_IP6_CONFIG_PRIVACY_DISABLED", "0"),
    ("NM_SETTING_IP6_CONFIG_PRIVACY_PREFER_PUBLIC_ADDR", "1"),
    ("NM_SETTING_IP6_CONFIG_PRIVACY_PREFER_TEMP_ADDR", "2"),
    ("NM_SETTING_IP6_CONFIG_PRIVACY_UNKNOWN", "-1"),
    ("NM_SETTING_IP6_CONFIG_SETTING_NAME", "ipv6"),
    ("NM_SETTING_IP6_CONFIG_TOKEN", "token"),
    ("NM_SETTING_IP_CONFIG_ADDRESSES", "addresses"),
    ("NM_SETTING_IP_CONFIG_DAD_TIMEOUT", "dad-timeout"),
    ("NM_SETTING_IP_CONFIG_DAD_TIMEOUT_MAX", "30000"),
    ("NM_SETTING_IP_CONFIG_DHCP_HOSTNAME", "dhcp-hostname"),
    ("NM_SETTING_IP_CONFIG_DHCP_SEND_HOSTNAME", "dhcp-send-hostname"),
    ("NM_SETTING_IP_CONFIG_DHCP_TIMEOUT", "dhcp-timeout"),
    ("NM_SETTING_IP_CONFIG_DNS", "dns"),
    ("NM_SETTING_IP_CONFIG_DNS_OPTIONS", "dns-options"),
    ("NM_SETTING_IP_CONFIG_DNS_PRIORITY", "dns-priority"),
    ("NM_SETTING_IP_CONFIG_DNS_SEARCH", "dns-search"),
    ("NM_SETTING_IP_CONFIG_GATEWAY", "gateway"),
    ("NM_SETTING_IP_CONFIG_IGNORE_AUTO_DNS", "ignore-auto-dns"),
    ("NM_SETTING_IP_CONFIG_IGNORE_AUTO_ROUTES", "ignore-auto-routes"),
    ("NM_SETTING_IP_CONFIG_MAY_FAIL", "may-fail"),
    ("NM_SETTING_IP_CONFIG_METHOD", "method"),
    ("NM_SETTING_IP_CONFIG_NEVER_DEFAULT", "never-default"),
    ("NM_SETTING_IP_CONFIG_ROUTES", "routes"),
    ("NM_SETTING_IP_CONFIG_ROUTE_METRIC", "route-metric"),
    ("NM_SETTING_IP_TUNNEL_ENCAPSULATION_LIMIT", "encapsulation-limit"),
    ("NM_SETTING_IP_TUNNEL_FLOW_LABEL", "flow-label"),
    ("NM_SETTING_IP_TUNNEL_INPUT_KEY", "input-key"),
    ("NM_SETTING_IP_TUNNEL_LOCAL", "local"),
    ("NM_SETTING_IP_TUNNEL_MODE", "mode"),
    ("NM_SETTING_IP_TUNNEL_MTU", "mtu"),
    ("NM_SETTING_IP_TUNNEL_OUTPUT_KEY", "output-key"),
    ("NM_SETTING_IP_TUNNEL_PARENT", "parent"),
    ("NM_SETTING_IP_TUNNEL_PATH_MTU_DISCOVERY", "path-mtu-discovery"),
    ("NM_SETTING_IP_TUNNEL_REMOTE", "remote"),
    ("NM_SETTING_IP_TUNNEL_SETTING_NAME", "ip-tunnel"),
    ("NM_SETTING_IP_TUNNEL_TOS", "tos"),
    ("NM_SETTING_IP_TUNNEL_TTL", "ttl"),
    ("NM_SETTING_MACSEC_ENCRYPT", "encrypt"),
    ("NM_SETTING_MACSEC_MKA_CAK", "mka-cak"),
    ("NM_SETTING_MACSEC_MKA_CAK_FLAGS", "mka-cak-flags"),
    ("NM_SETTING_MACSEC_MKA_CAK_LENGTH", "32"),
    ("NM_SETTING_MACSEC_MKA_CKN", "mka-ckn"),
    ("NM_SETTING_MACSEC_MKA_CKN_LENGTH", "64"),
    ("NM_SETTING_MACSEC_MODE", "mode"),
    ("NM_SETTING_MACSEC_MODE_EAP", "1"),
    ("NM_SETTING_MACSEC_MODE_PSK", "0"),
    ("NM_SETTING_MACSEC_PARENT", "parent"),
    ("NM_SETTING_MACSEC_PORT", "port"),
    ("NM_SETTING_MACSEC_SETTING_NAME", "macsec"),
    ("NM_SETTING_MACSEC_VALIDATION", "validation"),
    ("NM_SETTING_MACSEC_VALIDATION_CHECK", "1"),
    ("NM_SETTING_MACSEC_VALIDATION_DISABLE", "0"),
    ("NM_SETTING_MACSEC_VALIDATION_STRICT", "2"),
    ("NM_SETTING_MACVLAN_MODE", "mode"),
    ("NM_SETTING_MACVLAN_MODE_BRIDGE", "2"),
    ("NM_SETTING_MACVLAN_MODE_PASSTHRU", "4"),
    ("NM_SETTING_MACVLAN_MODE_PRIVATE", "3"),
    ("NM_SETTING_MACVLAN_MODE_SOURCE", "5"),
    ("NM_SETTING_MACVLAN_MODE_UNKNOWN", "0"),
    ("NM_SETTING_MACVLAN_MODE_VEPA", "1"),
    ("NM_SETTING_MACVLAN_PARENT", "parent"),
    ("NM_SETTING_MACVLAN_PROMISCUOUS", "promiscuous"),
    ("NM_SETTING_MACVLAN_SETTING_NAME", "macvlan"),
    ("NM_SETTING_MACVLAN_TAP", "tap"),
    ("NM_SETTING_MAC_RANDOMIZATION_ALWAYS", "2"),
    ("NM_SETTING_MAC_RANDOMIZATION_DEFAULT", "0"),
    ("NM_SETTING_MAC_RANDOMIZATION_NEVER", "1"),
    ("NM_SETTING_NAME", "name"),
    ("NM_SETTING_OLPC_MESH_CHANNEL", "channel"),
    ("NM_SETTING_OLPC_MESH_DHCP_ANYCAST_ADDRESS", "dhcp-anycast-address"),
    ("NM_SETTING_OLPC_MESH_SETTING_NAME", "802-11-olpc-mesh"),
    ("NM_SETTING_OLPC_MESH_SSID", "ssid"),
    ("NM_SETTING_PARAM_FUZZY_IGNORE", "8"),
    ("NM_SETTING_PARAM_REQUIRED", "2"),
    ("NM_SETTING_PARAM_SECRET", "4"),
    ("NM_SETTING_PPPOE_PASSWORD", "password"),
    ("NM_SETTING_PPPOE_PASSWORD_FLAGS", "password-flags"),
    ("NM_SETTING_PPPOE_SERVICE", "service"),
    ("NM_SETTING_PPPOE_SETTING_NAME", "pppoe"),
    ("NM_SETTING_PPPOE_USERNAME", "username"),
    ("NM_SETTING_PPP_BAUD", "baud"),
    ("NM_SETTING_PPP_CRTSCTS", "crtscts"),
    ("NM_SETTING_PPP_LCP_ECHO_FAILURE", "lcp-echo-failure"),
    ("NM_SETTING_PPP_LCP_ECHO_INTERVAL", "lcp-echo-interval"),
    ("NM_SETTING_PPP_MPPE_STATEFUL", "mppe-stateful"),
    ("NM_SETTING_PPP_MRU", "mru"),
    ("NM_SETTING_PPP_MTU", "mtu"),
    ("NM_SETTING_PPP_NOAUTH", "noauth"),
    ("NM_SETTING_PPP_NOBSDCOMP", "nobsdcomp"),
    ("NM_SETTING_PPP_NODEFLATE", "nodeflate"),
    ("NM_SETTING_PPP_NO_VJ_COMP", "no-vj-comp"),
    ("NM_SETTING_PPP_REFUSE_CHAP", "refuse-chap"),
    ("NM_SETTING_PPP_REFUSE_EAP", "refuse-eap"),
    ("NM_SETTING_PPP_REFUSE_MSCHAP", "refuse-mschap"),
    ("NM_SETTING_PPP_REFUSE_MSCHAPV2", "refuse-mschapv2"),
    ("NM_SETTING_PPP_REFUSE_PAP", "refuse-pap"),
    ("NM_SETTING_PPP_REQUIRE_MPPE", "require-mppe"),
    ("NM_SETTING_PPP_REQUIRE_MPPE_128", "require-mppe-128"),
    ("NM_SETTING_PPP_SETTING_NAME", "ppp"),
    ("NM_SETTING_PROXY_BROWSER_ONLY", "browser-only"),
    ("NM_SETTING_PROXY_METHOD", "method"),
    ("NM_SETTING_PROXY_METHOD_AUTO", "1"),
    ("NM_SETTING_PROXY_METHOD_NONE", "0"),
    ("NM_SETTING_PROXY_PAC_SCRIPT", "pac-script"),
    ("NM_SETTING_PROXY_PAC_URL", "pac-url"),
    ("NM_SETTING_PROXY_SETTING_NAME", "proxy"),
    ("NM_SETTING_SECRET_FLAG_AGENT_OWNED", "1"),
    ("NM_SETTING_SECRET_FLAG_NONE", "0"),
    ("NM_SETTING_SECRET_FLAG_NOT_REQUIRED", "4"),
    ("NM_SETTING_SECRET_FLAG_NOT_SAVED", "2"),
    ("NM_SETTING_SERIAL_BAUD", "baud"),
    ("NM_SETTING_SERIAL_BITS", "bits"),
    ("NM_SETTING_SERIAL_PARITY", "parity"),
    ("NM_SETTING_SERIAL_PARITY_EVEN", "1"),
    ("NM_SETTING_SERIAL_PARITY_NONE", "0"),
    ("NM_SETTING_SERIAL_PARITY_ODD", "2"),
    ("NM_SETTING_SERIAL_SEND_DELAY", "send-delay"),
    ("NM_SETTING_SERIAL_SETTING_NAME", "serial"),
    ("NM_SETTING_SERIAL_STOPBITS", "stopbits"),
    ("NM_SETTING_TEAM_CONFIG", "config"),
    ("NM_SETTING_TEAM_PORT_CONFIG", "config"),
    ("NM_SETTING_TEAM_PORT_SETTING_NAME", "team-port"),
    ("NM_SETTING_TEAM_SETTING_NAME", "team"),
    ("NM_SETTING_TUN_GROUP", "group"),
    ("NM_SETTING_TUN_MODE", "mode"),
    ("NM_SETTING_TUN_MODE_TAP", "2"),
    ("NM_SETTING_TUN_MODE_TUN", "1"),
    ("NM_SETTING_TUN_MODE_UNKNOWN", "0"),
    ("NM_SETTING_TUN_MULTI_QUEUE", "multi-queue"),
    ("NM_SETTING_TUN_OWNER", "owner"),
    ("NM_SETTING_TUN_PI", "pi"),
    ("NM_SETTING_TUN_SETTING_NAME", "tun"),
    ("NM_SETTING_TUN_VNET_HDR", "vnet-hdr"),
    ("NM_SETTING_USER_DATA", "data"),
    ("NM_SETTING_USER_SETTING_NAME", "user"),
    ("NM_SETTING_VLAN_EGRESS_PRIORITY_MAP", "egress-priority-map"),
    ("NM_SETTING_VLAN_FLAGS", "flags"),
    ("NM_SETTING_VLAN_ID", "id"),
    ("NM_SETTING_VLAN_INGRESS_PRIORITY_MAP", "ingress-priority-map"),
    ("NM_SETTING_VLAN_PARENT", "parent"),
    ("NM_SETTING_VLAN_SETTING_NAME", "vlan"),
    ("NM_SETTING_VPN_DATA", "data"),
    ("NM_SETTING_VPN_PERSISTENT", "persistent"),
    ("NM_SETTING_VPN_SECRETS", "secrets"),
    ("NM_SETTING_VPN_SERVICE_TYPE", "service-type"),
    ("NM_SETTING_VPN_SETTING_NAME", "vpn"),
    ("NM_SETTING_VPN_TIMEOUT", "timeout"),
    ("NM_SETTING_VPN_USER_NAME", "user-name"),
    ("NM_SETTING_VXLAN_AGEING", "ageing"),
    ("NM_SETTING_VXLAN_DESTINATION_PORT", "destination-port"),
    ("NM_SETTING_VXLAN_ID", "id"),
    ("NM_SETTING_VXLAN_L2_MISS", "l2-miss"),
    ("NM_SETTING_VXLAN_L3_MISS", "l3-miss"),
    ("NM_SETTING_VXLAN_LEARNING", "learning"),
    ("NM_SETTING_VXLAN_LIMIT", "limit"),
    ("NM_SETTING_VXLAN_LOCAL", "local"),
    ("NM_SETTING_VXLAN_PARENT", "parent"),
    ("NM_SETTING_VXLAN_PROXY", "proxy"),
    ("NM_SETTING_VXLAN_REMOTE", "remote"),
    ("NM_SETTING_VXLAN_RSC", "rsc"),
    ("NM_SETTING_VXLAN_SETTING_NAME", "vxlan"),
    ("NM_SETTING_VXLAN_SOURCE_PORT_MAX", "source-port-max"),
    ("NM_SETTING_VXLAN_SOURCE_PORT_MIN", "source-port-min"),
    ("NM_SETTING_VXLAN_TOS", "tos"),
    ("NM_SETTING_VXLAN_TTL", "ttl"),
    ("NM_SETTING_WIMAX_MAC_ADDRESS", "mac-address"),
    ("NM_SETTING_WIMAX_NETWORK_NAME", "network-name"),
    ("NM_SETTING_WIMAX_SETTING_NAME", "wimax"),
    ("NM_SETTING_WIRED_AUTO_NEGOTIATE", "auto-negotiate"),
    ("NM_SETTING_WIRED_CLONED_MAC_ADDRESS", "cloned-mac-address"),
    ("NM_SETTING_WIRED_DUPLEX", "duplex"),
    ("NM_SETTING_WIRED_GENERATE_MAC_ADDRESS_MASK", "generate-mac-address-mask"),
    ("NM_SETTING_WIRED_MAC_ADDRESS", "mac-address"),
    ("NM_SETTING_WIRED_MAC_ADDRESS_BLACKLIST", "mac-address-blacklist"),
    ("NM_SETTING_WIRED_MTU", "mtu"),
    ("NM_SETTING_WIRED_PORT", "port"),
    ("NM_SETTING_WIRED_S390_NETTYPE", "s390-nettype"),
    ("NM_SETTING_WIRED_S390_OPTIONS", "s390-options"),
    ("NM_SETTING_WIRED_S390_SUBCHANNELS", "s390-subchannels"),
    ("NM_SETTING_WIRED_SETTING_NAME", "802-3-ethernet"),
    ("NM_SETTING_WIRED_SPEED", "speed"),
    ("NM_SETTING_WIRED_WAKE_ON_LAN", "wake-on-lan"),
    ("NM_SETTING_WIRED_WAKE_ON_LAN_ARP", "32"),
    ("NM_SETTING_WIRED_WAKE_ON_LAN_BROADCAST", "16"),
    ("NM_SETTING_WIRED_WAKE_ON_LAN_DEFAULT", "1"),
    ("NM_SETTING_WIRED_WAKE_ON_LAN_IGNORE", "32768"),
    ("NM_SETTING_WIRED_WAKE_ON_LAN_MAGIC", "64"),
    ("NM_SETTING_WIRED_WAKE_ON_LAN_MULTICAST", "8"),
    ("NM_SETTING_WIRED_WAKE_ON_LAN_PASSWORD", "wake-on-lan-password"),
    ("NM_SETTING_WIRED_WAKE_ON_LAN_PHY", "2"),
    ("NM_SETTING_WIRED_WAKE_ON_LAN_UNICAST", "4"),
    ("NM_SETTING_WIRELESS_BAND", "band"),
    ("NM_SETTING_WIRELESS_BSSID", "bssid"),
    ("NM_SETTING_WIRELESS_CHANNEL", "channel"),
    ("NM_SETTING_WIRELESS_CLONED_MAC_ADDRESS", "cloned-mac-address"),
    ("NM_SETTING_WIRELESS_GENERATE_MAC_ADDRESS_MASK", "generate-mac-address-mask"),
    ("NM_SETTING_WIRELESS_HIDDEN", "hidden"),
    ("NM_SETTING_WIRELESS_MAC_ADDRESS", "mac-address"),
    ("NM_SETTING_WIRELESS_MAC_ADDRESS_BLACKLIST", "mac-address-blacklist"),
    ("NM_SETTING_WIRELESS_MAC_ADDRESS_RANDOMIZATION", "mac-address-randomization"),
    ("NM_SETTING_WIRELESS_MODE", "mode"),
    ("NM_SETTING_WIRELESS_MODE_ADHOC", "adhoc"),
    ("NM_SETTING_WIRELESS_MODE_AP", "ap"),
    ("NM_SETTING_WIRELESS_MODE_INFRA", "infrastructure"),
    ("NM_SETTING_WIRELESS_MTU", "mtu"),
    ("NM_SETTING_WIRELESS_POWERSAVE", "powersave"),
    ("NM_SETTING_WIRELESS_POWERSAVE_DEFAULT", "0"),
    ("NM_SETTING_WIRELESS_POWERSAVE_DISABLE", "2"),
    ("NM_SETTING_WIRELESS_POWERSAVE_ENABLE", "3"),
    ("NM_SETTING_WIRELESS_POWERSAVE_IGNORE", "1"),
    ("NM_SETTING_WIRELESS_RATE", "rate"),
    ("NM_SETTING_WIRELESS_SECURITY_AUTH_ALG", "auth-alg"),
    ("NM_SETTING_WIRELESS_SECURITY_GROUP", "group"),
    ("NM_SETTING_WIRELESS_SECURITY_KEY_MGMT", "key-mgmt"),
    ("NM_SETTING_WIRELESS_SECURITY_LEAP_PASSWORD", "leap-password"),
    ("NM_SETTING_WIRELESS_SECURITY_LEAP_PASSWORD_FLAGS", "leap-password-flags"),
    ("NM_SETTING_WIRELESS_SECURITY_LEAP_USERNAME", "leap-username"),
    ("NM_SETTING_WIRELESS_SECURITY_PAIRWISE", "pairwise"),
    ("NM_SETTING_WIRELESS_SECURITY_PROTO", "proto"),
    ("NM_SETTING_WIRELESS_SECURITY_PSK", "psk"),
    ("NM_SETTING_WIRELESS_SECURITY_PSK_FLAGS", "psk-flags"),
    ("NM_SETTING_WIRELESS_SECURITY_SETTING_NAME", "802-11-wireless-security"),
    ("NM_SETTING_WIRELESS_SECURITY_WEP_KEY0", "wep-key0"),
    ("NM_SETTING_WIRELESS_SECURITY_WEP_KEY1", "wep-key1"),
    ("NM_SETTING_WIRELESS_SECURITY_WEP_KEY2", "wep-key2"),
    ("NM_SETTING_WIRELESS_SECURITY_WEP_KEY3", "wep-key3"),
    ("NM_SETTING_WIRELESS_SECURITY_WEP_KEY_FLAGS", "wep-key-flags"),
    ("NM_SETTING_WIRELESS_SECURITY_WEP_KEY_TYPE", "wep-key-type"),
    ("NM_SETTING_WIRELESS_SECURITY_WEP_TX_KEYIDX", "wep-tx-keyidx"),
    ("NM_SETTING_WIRELESS_SEEN_BSSIDS", "seen-bssids"),
    ("NM_SETTING_WIRELESS_SETTING_NAME", "802-11-wireless"),
    ("NM_SETTING_WIRELESS_SSID", "ssid"),
    ("NM_SETTING_WIRELESS_TX_POWER", "tx-power"),
    ("NM_STATE_ASLEEP", "10"),
    ("NM_STATE_CONNECTED_GLOBAL", "70"),
    ("NM_STATE_CONNECTED_LOCAL", "50"),
    ("NM_STATE_CONNECTED_SITE", "60"),
    ("NM_STATE_CONNECTING", "40"),
    ("NM_STATE_DISCONNECTED", "20"),
    ("NM_STATE_DISCONNECTING", "30"),
    ("NM_STATE_UNKNOWN", "0"),
    ("NM_UTILS_HWADDR_LEN_MAX", "20"),
    ("NM_VLAN_EGRESS_MAP", "1"),
    ("NM_VLAN_FLAGS_ALL", "0"),
    ("NM_VLAN_FLAG_GVRP", "2"),
    ("NM_VLAN_FLAG_LOOSE_BINDING", "4"),
    ("NM_VLAN_FLAG_MVRP", "8"),
    ("NM_VLAN_FLAG_REORDER_HEADERS", "1"),
    ("NM_VLAN_INGRESS_MAP", "0"),
    ("NM_VPN_CONNECTION_BANNER", "banner"),
    ("NM_VPN_CONNECTION_STATE_ACTIVATED", "5"),
    ("NM_VPN_CONNECTION_STATE_CONNECT", "3"),
    ("NM_VPN_CONNECTION_STATE_DISCONNECTED", "7"),
    ("NM_VPN_CONNECTION_STATE_FAILED", "6"),
    ("NM_VPN_CONNECTION_STATE_IP_CONFIG_GET", "4"),
    ("NM_VPN_CONNECTION_STATE_NEED_AUTH", "2"),
    ("NM_VPN_CONNECTION_STATE_PREPARE", "1"),
    ("NM_VPN_CONNECTION_STATE_REASON_CONNECTION_REMOVED", "11"),
    ("NM_VPN_CONNECTION_STATE_REASON_CONNECT_TIMEOUT", "6"),
    ("NM_VPN_CONNECTION_STATE_REASON_DEVICE_DISCONNECTED", "3"),
    ("NM_VPN_CONNECTION_STATE_REASON_IP_CONFIG_INVALID", "5"),
    ("NM_VPN_CONNECTION_STATE_REASON_LOGIN_FAILED", "10"),
    ("NM_VPN_CONNECTION_STATE_REASON_NONE", "1"),
    ("NM_VPN_CONNECTION_STATE_REASON_NO_SECRETS", "9"),
    ("NM_VPN_CONNECTION_STATE_REASON_SERVICE_START_FAILED", "8"),
    ("NM_VPN_CONNECTION_STATE_REASON_SERVICE_START_TIMEOUT", "7"),
    ("NM_VPN_CONNECTION_STATE_REASON_SERVICE_STOPPED", "4"),
    ("NM_VPN_CONNECTION_STATE_REASON_UNKNOWN", "0"),
    ("NM_VPN_CONNECTION_STATE_REASON_USER_DISCONNECTED", "2"),
    ("NM_VPN_CONNECTION_STATE_UNKNOWN", "0"),
    ("NM_VPN_CONNECTION_VPN_STATE", "vpn-state"),
    ("NM_VPN_DBUS_PLUGIN_INTERFACE", "org.freedesktop.NetworkManager.VPN.Plugin"),
    ("NM_VPN_DBUS_PLUGIN_PATH", "/org/freedesktop/NetworkManager/VPN/Plugin"),
    ("NM_VPN_EDITOR_PLUGIN_CAPABILITY_EXPORT", "2"),
    ("NM_VPN_EDITOR_PLUGIN_CAPABILITY_IMPORT", "1"),
    ("NM_VPN_EDITOR_PLUGIN_CAPABILITY_IPV6", "4"),
    ("NM_VPN_EDITOR_PLUGIN_CAPABILITY_NONE", "0"),
    ("NM_VPN_EDITOR_PLUGIN_DESCRIPTION", "description"),
    ("NM_VPN_EDITOR_PLUGIN_NAME", "name"),
    ("NM_VPN_EDITOR_PLUGIN_SERVICE", "service"),
    ("NM_VPN_PLUGIN_CAN_PERSIST", "can-persist"),
    ("NM_VPN_PLUGIN_CONFIG_BANNER", "banner"),
    ("NM_VPN_PLUGIN_CONFIG_EXT_GATEWAY", "gateway"),
    ("NM_VPN_PLUGIN_CONFIG_HAS_IP4", "has-ip4"),
    ("NM_VPN_PLUGIN_CONFIG_HAS_IP6", "has-ip6"),
    ("NM_VPN_PLUGIN_CONFIG_MTU", "mtu"),
    ("NM_VPN_PLUGIN_CONFIG_PROXY_PAC", "pac"),
    ("NM_VPN_PLUGIN_CONFIG_TUNDEV", "tundev"),
    ("NM_VPN_PLUGIN_ERROR_ALREADY_STARTED", "2"),
    ("NM_VPN_PLUGIN_ERROR_ALREADY_STOPPED", "4"),
    ("NM_VPN_PLUGIN_ERROR_BAD_ARGUMENTS", "6"),
    ("NM_VPN_PLUGIN_ERROR_FAILED", "0"),
    ("NM_VPN_PLUGIN_ERROR_INTERACTIVE_NOT_SUPPORTED", "9"),
    ("NM_VPN_PLUGIN_ERROR_INVALID_CONNECTION", "8"),
    ("NM_VPN_PLUGIN_ERROR_LAUNCH_FAILED", "7"),
    ("NM_VPN_PLUGIN_ERROR_STARTING_IN_PROGRESS", "1"),
    ("NM_VPN_PLUGIN_ERROR_STOPPING_IN_PROGRESS", "3"),
    ("NM_VPN_PLUGIN_ERROR_WRONG_STATE", "5"),
    ("NM_VPN_PLUGIN_FAILURE_BAD_IP_CONFIG", "2"),
    ("NM_VPN_PLUGIN_FAILURE_CONNECT_FAILED", "1"),
    ("NM_VPN_PLUGIN_FAILURE_LOGIN_FAILED", "0"),
    ("NM_VPN_PLUGIN_INFO_FILENAME", "filename"),
    ("NM_VPN_PLUGIN_INFO_KEYFILE", "keyfile"),
    ("NM_VPN_PLUGIN_INFO_KF_GROUP_CONNECTION", "VPN Connection"),
    ("NM_VPN_PLUGIN_INFO_KF_GROUP_GNOME", "GNOME"),
    ("NM_VPN_PLUGIN_INFO_KF_GROUP_LIBNM", "libnm"),
    ("NM_VPN_PLUGIN_INFO_NAME", "name"),
    ("NM_VPN_PLUGIN_IP4_CONFIG_ADDRESS", "address"),
    ("NM_VPN_PLUGIN_IP4_CONFIG_DNS", "dns"),
    ("NM_VPN_PLUGIN_IP4_CONFIG_DOMAIN", "domain"),
    ("NM_VPN_PLUGIN_IP4_CONFIG_DOMAINS", "domains"),
    ("NM_VPN_PLUGIN_IP4_CONFIG_INT_GATEWAY", "internal-gateway"),
    ("NM_VPN_PLUGIN_IP4_CONFIG_MSS", "mss"),
    ("NM_VPN_PLUGIN_IP4_CONFIG_NBNS", "nbns"),
    ("NM_VPN_PLUGIN_IP4_CONFIG_NEVER_DEFAULT", "never-default"),
    ("NM_VPN_PLUGIN_IP4_CONFIG_PREFIX", "prefix"),
    ("NM_VPN_PLUGIN_IP4_CONFIG_PRESERVE_ROUTES", "preserve-routes"),
    ("NM_VPN_PLUGIN_IP4_CONFIG_PTP", "ptp"),
    ("NM_VPN_PLUGIN_IP4_CONFIG_ROUTES", "routes"),
    ("NM_VPN_PLUGIN_IP6_CONFIG_ADDRESS", "address"),
    ("NM_VPN_PLUGIN_IP6_CONFIG_DNS", "dns"),
    ("NM_VPN_PLUGIN_IP6_CONFIG_DOMAIN", "domain"),
    ("NM_VPN_PLUGIN_IP6_CONFIG_DOMAINS", "domains"),
    ("NM_VPN_PLUGIN_IP6_CONFIG_INT_GATEWAY", "internal-gateway"),
    ("NM_VPN_PLUGIN_IP6_CONFIG_MSS", "mss"),
    ("NM_VPN_PLUGIN_IP6_CONFIG_NEVER_DEFAULT", "never-default"),
    ("NM_VPN_PLUGIN_IP6_CONFIG_PREFIX", "prefix"),
    ("NM_VPN_PLUGIN_IP6_CONFIG_PRESERVE_ROUTES", "preserve-routes"),
    ("NM_VPN_PLUGIN_IP6_CONFIG_PTP", "ptp"),
    ("NM_VPN_PLUGIN_IP6_CONFIG_ROUTES", "routes"),
    ("NM_VPN_PLUGIN_OLD_DBUS_SERVICE_NAME", "service-name"),
    ("NM_VPN_PLUGIN_OLD_STATE", "state"),
    ("NM_VPN_SERVICE_PLUGIN_DBUS_SERVICE_NAME", "service-name"),
    ("NM_VPN_SERVICE_PLUGIN_DBUS_WATCH_PEER", "watch-peer"),
    ("NM_VPN_SERVICE_PLUGIN_STATE", "state"),
    ("NM_VPN_SERVICE_STATE_INIT", "1"),
    ("NM_VPN_SERVICE_STATE_SHUTDOWN", "2"),
    ("NM_VPN_SERVICE_STATE_STARTED", "4"),
    ("NM_VPN_SERVICE_STATE_STARTING", "3"),
    ("NM_VPN_SERVICE_STATE_STOPPED", "6"),
    ("NM_VPN_SERVICE_STATE_STOPPING", "5"),
    ("NM_VPN_SERVICE_STATE_UNKNOWN", "0"),
    ("NM_WEP_KEY_TYPE_KEY", "1"),
    ("NM_WEP_KEY_TYPE_LAST", "2"),
    ("NM_WEP_KEY_TYPE_PASSPHRASE", "2"),
    ("NM_WEP_KEY_TYPE_UNKNOWN", "0"),
    ("NM_WIFI_DEVICE_CAP_ADHOC", "128"),
    ("NM_WIFI_DEVICE_CAP_AP", "64"),
    ("NM_WIFI_DEVICE_CAP_CIPHER_CCMP", "8"),
    ("NM_WIFI_DEVICE_CAP_CIPHER_TKIP", "4"),
    ("NM_WIFI_DEVICE_CAP_CIPHER_WEP104", "2"),
    ("NM_WIFI_DEVICE_CAP_CIPHER_WEP40", "1"),
    ("NM_WIFI_DEVICE_CAP_FREQ_2GHZ", "512"),
    ("NM_WIFI_DEVICE_CAP_FREQ_5GHZ", "1024"),
    ("NM_WIFI_DEVICE_CAP_FREQ_VALID", "256"),
    ("NM_WIFI_DEVICE_CAP_NONE", "0"),
    ("NM_WIFI_DEVICE_CAP_RSN", "32"),
    ("NM_WIFI_DEVICE_CAP_WPA", "16"),
    ("NM_WIMAX_NSP_NAME", "name"),
    ("NM_WIMAX_NSP_NETWORK_TYPE", "network-type"),
    ("NM_WIMAX_NSP_NETWORK_TYPE_HOME", "1"),
    ("NM_WIMAX_NSP_NETWORK_TYPE_PARTNER", "2"),
    ("NM_WIMAX_NSP_NETWORK_TYPE_ROAMING_PARTNER", "3"),
    ("NM_WIMAX_NSP_NETWORK_TYPE_UNKNOWN", "0"),
    ("NM_WIMAX_NSP_SIGNAL_QUALITY", "signal-quality"),
];


